name: CI
on:
  push:
    branches:
      - v3.x
      - develop
      - main
    tags:
      - "*"
  pull_request:
  workflow_dispatch:

jobs:
  test:
    name: Test
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
#        os: [ windows-latest ]
        os: [ aigio-win10ltsc-vm ]
        
    steps:
      - name: Checkout repository
#        if: ${{ matrix.os != 'aigio-win10ltsc-vm' }}
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          submodules: recursive
          
#      - name: Checkout repository(BD.Git.Checkout.Tools)
#        if: ${{ matrix.os == 'aigio-win10ltsc-vm' }}
#        run: C:\actions-runner\checkout.exe ${{ github.workspace }} ${{ github.sha }} ${{ github.repositoryUrl }}

      - name: Setup .NET
        if: ${{ matrix.os != 'aigio-win10ltsc-vm' }}
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: 7.0.x

      - name: Install Android SDK
        if: ${{ matrix.os != 'aigio-win10ltsc-vm' }}
        run: dotnet workload install android

      - name: Install iOS SDK
        if: ${{ matrix.os != 'aigio-win10ltsc-vm' }}
        run: dotnet workload install ios

      - name: Install macOS SDK
        if: ${{ matrix.os != 'aigio-win10ltsc-vm' }}
        run: dotnet workload install macos

      - name: Install Mac Catalyst SDK
        if: ${{ matrix.os != 'aigio-win10ltsc-vm' }}
        run: dotnet workload install maccatalyst

      - name: Install Maui
        if: ${{ matrix.os != 'aigio-win10ltsc-vm' }}
        run: dotnet workload install maui

#      - name: Install wasm-tools
#        if: ${{ matrix.os != 'aigio-win10ltsc-vm' }}
#        run: dotnet workload install wasm-tools

      - name: Restore Workload
        run: dotnet workload restore src\BD.WTTS.Client.Avalonia.App\BD.WTTS.Client.Avalonia.App.csproj

      - name: Verify dotnet info
        run: dotnet --info

      - name: Build BD.WTTS.Client.AppHost
        run: dotnet build -c Release src\BD.WTTS.Client.AppHost\BD.WTTS.Client.AppHost.csproj --nologo -v q --property:WarningLevel=1 --property:DebugType=pdbonly 

      - name: Build BD.WTTS.Client.Plugins.Accelerator.ReverseProxy
        run: dotnet build -c Release src\BD.WTTS.Client.Plugins.Accelerator.ReverseProxy\BD.WTTS.Client.Plugins.Accelerator.ReverseProxy.csproj --nologo -v q --property:WarningLevel=1 --property:DebugType=pdbonly 

      - name: Build BD.WTTS.Client.Avalonia.App
        run: dotnet build -c Release src\BD.WTTS.Client.Avalonia.App\BD.WTTS.Client.Avalonia.App.csproj --nologo -v q --property:WarningLevel=1 --property:DebugType=pdbonly 

      - name: Build BD.WTTS.Client.Avalonia.Designer.HostApp
        run: dotnet build -c Release src\BD.WTTS.Client.Avalonia.Designer.HostApp\BD.WTTS.Client.Avalonia.Designer.HostApp.csproj --nologo -v q --property:WarningLevel=1 --property:DebugType=pdbonly 

      - name: Test
        run: dotnet test src/BD.WTTS.UnitTest/BD.WTTS.UnitTest.csproj -c Release -p:GeneratePackageOnBuild=false --nologo -v q --property:WarningLevel=1 --property:DebugType=pdbonly 

#  release:
#    name: Release
#    needs: build
#    runs-on: ubuntu-latest
#
#    steps:
#      - name: Changelog
#        uses: glennawatson/ChangeLog@v1
#        id: changelog
#
#      - name: Create Release
#        uses: ncipollo/release-action@v1
#        with:
#          token: ${{ secrets.RMBADMIN_TOKEN }}
#          body: ${{ steps.changelog.outputs.commitLog }}
#          draft: false
#          prerelease: false
