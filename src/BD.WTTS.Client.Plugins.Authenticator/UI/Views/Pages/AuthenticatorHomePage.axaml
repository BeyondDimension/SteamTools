<spp:PageBase
    x:Class="BD.WTTS.UI.Views.Pages.AuthenticatorHomePage"
    xmlns="https://github.com/avaloniaui"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:s="https://steampp.net/services"
    xmlns:spp="https://steampp.net/ui"
    xmlns:ui="using:FluentAvalonia.UI.Controls"
    Title="{Binding Name, Source={x:Static s:Plugin.Instance}, Mode=OneWay}"
    d:DesignHeight="450"
    d:DesignWidth="800"
    x:CompileBindings="True"
    x:DataType="spp:AuthenticatorHomePageViewModel"
    Description="{Binding Description, Source={x:Static s:Plugin.Instance}, Mode=OneWay}"
    Subtitle="{Binding Author, Source={x:Static s:Plugin.Instance}, Mode=OneWay, Converter={StaticResource StringFormatConverter}, ConverterParameter=Plugin_Author}"
    mc:Ignorable="d">
    <spp:PageBase.PreviewImage>
        <ui:ImageIconSource Source="{Binding Icon, Source={x:Static s:Plugin.Instance}, Mode=OneWay, Converter={StaticResource BitmapAssetValueConverter}}" />
    </spp:PageBase.PreviewImage>
    <spp:PageBase.ActionContent>
        <StackPanel Orientation="Horizontal" Spacing="2">
            <Button
                Padding="8,4"
                Command="{Binding ShowAddWindow}"
                DockPanel.Dock="Right"
                Theme="{StaticResource TransparentButton}">
                <Panel>
                    <Viewbox
                        Width="16"
                        Height="16"
                        HorizontalAlignment="Left">
                        <ui:SymbolIcon Symbol="Add" />
                    </Viewbox>
                    <TextBlock
                        Margin="28,4,0,4"
                        HorizontalAlignment="Left"
                        VerticalAlignment="Center"
                        Text="{Binding Path=Res.Add, Mode=OneWay, Source={x:Static spp:Strings.Add}}" />
                </Panel>
            </Button>
            <!--<Button
                Padding="8,4"
                Command="{Binding SyncAuthenticators}"
                DockPanel.Dock="Right"
                Theme="{StaticResource TransparentButton}">
                <Panel>
                    <Viewbox
                        Width="16"
                        Height="16"
                        HorizontalAlignment="Left">
                        <ui:SymbolIcon Symbol="Sync" />
                    </Viewbox>
                    <TextBlock
                        Margin="28,4,0,4"
                        HorizontalAlignment="Left"
                        VerticalAlignment="Center"
                        Text="{Binding Path=Res.LocalAuth_CloudSync, Mode=OneWay, Source={x:Static spp:Strings.LocalAuth_CloudSync}}" />
                </Panel>
            </Button>-->
            <Button
                Padding="8,4"
                Command="{Binding Initialize}"
                DockPanel.Dock="Right"
                Theme="{StaticResource TransparentButton}">
                <Panel>
                    <Viewbox
                        Width="16"
                        Height="16"
                        HorizontalAlignment="Left">
                        <ui:SymbolIcon Symbol="Refresh" />
                    </Viewbox>
                    <TextBlock
                        Margin="28,4,0,4"
                        HorizontalAlignment="Left"
                        VerticalAlignment="Center"
                        Text="{Binding Path=Res.Refresh, Mode=OneWay, Source={x:Static spp:Strings.Refresh}}" />
                </Panel>
            </Button>
            <ToggleButton
                Padding="8,4"
                DockPanel.Dock="Right"
                IsChecked="{Binding $parent[spp:PageBase].IsPaneOpen, Mode=TwoWay}"
                Theme="{StaticResource TransparentToggleButton}">
                <Panel>
                    <Viewbox
                        Width="16"
                        Height="16"
                        HorizontalAlignment="Left">
                        <ui:SymbolIcon Symbol="Settings" />
                    </Viewbox>
                    <TextBlock
                        Margin="28,4,0,4"
                        HorizontalAlignment="Left"
                        VerticalAlignment="Center"
                        Text="{Binding Path=Res.Settings_Auth, Mode=OneWay, Source={x:Static spp:Strings.Settings_Auth}}" />
                </Panel>
            </ToggleButton>
            <DropDownButton
                Padding="8"
                HorizontalContentAlignment="Center"
                VerticalContentAlignment="Center"
                Content="{StaticResource More}"
                FontFamily="{StaticResource SymbolThemeFontFamily}"
                FontSize="20"
                Theme="{StaticResource TransparentButton}">
                <DropDownButton.Flyout>
                    <ui:FAMenuFlyout Placement="BottomEdgeAlignedRight">
                        <!-- <ui:MenuFlyoutSubItem Text="令牌加密"> -->
                        <!--  <ui:MenuFlyoutItem  -->
                        <!--  Command="{Binding SetPasswordProtection}"  -->
                        <!--  IsEnabled="{Binding !HasPasswordEncrypt}"  -->
                        <!--  Text="添加密码保护" />  -->
                        <!--  <ui:MenuFlyoutItem  -->
                        <!--  Command="{Binding RemovePasswordProtection}"  -->
                        <!--  IsEnabled="{Binding HasPasswordEncrypt}"  -->
                        <!--  Text="移除密码保护" />  -->
                        <!--  <ui:MenuFlyoutItem  -->
                        <!--  Command="{Binding ToggleLocalProtection}"  -->
                        <!--  IsEnabled="{Binding !HasLocalPcEncrypt}"  -->
                        <!--  Text="添加机器验证" />  -->
                        <!--  <ui:MenuFlyoutItem  -->
                        <!--  Command="{Binding ToggleLocalProtection}"  -->
                        <!--  IsEnabled="{Binding HasLocalPcEncrypt}"  -->
                        <!--  Text="移除机器验证" />  -->
                        <!--     <ui:MenuFlyoutItem Command="{Binding EncryptHelp}" Text="加密帮助" /> -->
                        <!-- </ui:MenuFlyoutSubItem> -->
                        <ui:MenuFlyoutItem Command="{Binding OpenExportWindow}" Text="{Binding Path=Res.ExportAll, Mode=OneWay, Source={x:Static spp:Strings.ExportAll}}" />
                        <!--<ui:MenuFlyoutItem
                            Command="{Binding ReLockAuthenticator}"
                            IsEnabled="{Binding IsVerificationPass}"
                            Text="{Binding Path=Res.Auth_lock, Mode=OneWay, Source={x:Static spp:Strings.Auth_lock}}" />-->
                        <!--<ui:MenuFlyoutItem Command="{Binding ShowRecoverWindow}" Text="{Binding Path=Res.Auth_Sync_Recover, Mode=OneWay, Source={x:Static spp:Strings.Auth_Sync_Recover}}" />
                        <ui:MenuFlyoutItem Command="{Binding ResetIndependentPassword}" Text="{Binding Path=Res.Auth_Sync_ResetPassword, Mode=OneWay, Source={x:Static spp:Strings.Auth_Sync_ResetPassword}}" />-->
                        <!--<ui:MenuFlyoutItem Text="{Binding Path=Res.Settings_Plugin, Mode=OneWay, Source={x:Static spp:Strings.Settings_Plugin}}" />-->
                        <ui:MenuFlyoutSeparator />
                        <ui:MenuFlyoutItem IsEnabled="False">
                            <ui:MenuFlyoutItem.Text>
                                <MultiBinding StringFormat="{}{0}{1}">
                                    <CompiledBinding
                                        Mode="OneWay"
                                        Path="Res.Plugin_Version"
                                        Source="{x:Static spp:Strings.Plugin_Version}" />
                                    <CompiledBinding
                                        Mode="OneWay"
                                        Path="Version"
                                        Source="{x:Static s:Plugin.Instance}" />
                                </MultiBinding>
                            </ui:MenuFlyoutItem.Text>
                        </ui:MenuFlyoutItem>
                        <!--<ui:MenuFlyoutItem Text="{Binding Path=Res.ViewInStore, Mode=OneWay, Source={x:Static spp:Strings.ViewInStore}}" />
                        <ui:MenuFlyoutItem Text="{Binding Path=Res.UseHelp, Mode=OneWay, Source={x:Static spp:Strings.UseHelp}}" />
                        <ui:MenuFlyoutItem Text="{Binding Path=Res.AboutThisPlugin, Mode=OneWay, Source={x:Static spp:Strings.AboutThisPlugin}}" />-->
                    </ui:FAMenuFlyout>
                </DropDownButton.Flyout>
            </DropDownButton>
        </StackPanel>
    </spp:PageBase.ActionContent>

    <spp:PageBase.PaneContent>
        <StackPanel Margin="15,20" Spacing="10">
            <TextBlock
                Grid.Row="2"
                VerticalAlignment="Center"
                Text="{Binding Path=Res.Filter, Mode=OneWay, Source={x:Static spp:Strings.Filter}}"
                Theme="{StaticResource CaptionTextBlockStyle}" />

            <AutoCompleteBox
                MinWidth="280"
                VerticalAlignment="Center"
                Classes="Search"
                Text="{Binding SearchText}" />

            <TextBlock
                Text="{Binding Path=Res.EncryptSettings, Mode=OneWay, Source={x:Static spp:Strings.EncryptSettings}}"
                Theme="{StaticResource BodyStrongTextBlockStyle}"
                ToolTip.Tip="{Binding Path=Res.LocalAuth_ProtectionAuth_Info, Mode=OneWay, Source={x:Static spp:Strings.LocalAuth_ProtectionAuth_Info}}" />

            <Button
                HorizontalAlignment="Stretch"
                HorizontalContentAlignment="Center"
                Command="{Binding ReLockAuthenticator}"
                Content="{Binding Path=Res.Auth_lock, Mode=OneWay, Source={x:Static spp:Strings.Auth_lock}}"
                IsEnabled="{Binding IsVerificationPass}" />
            <Button
                HorizontalAlignment="Stretch"
                HorizontalContentAlignment="Center"
                Command="{Binding SetPasswordProtection}"
                Content="{Binding Path=Res.Auth_AddPasswordProtect, Mode=OneWay, Source={x:Static spp:Strings.Auth_AddPasswordProtect}}"
                IsVisible="{Binding !HasPasswordEncrypt}"
                ToolTip.Tip="{Binding Path=Res.LocalAuth_ProtectionAuth_EnablePasswordTip, Mode=OneWay, Source={x:Static spp:Strings.LocalAuth_ProtectionAuth_EnablePasswordTip}}" />
            <Button
                HorizontalAlignment="Stretch"
                HorizontalContentAlignment="Center"
                Command="{Binding RemovePasswordProtection}"
                Content="{Binding Path=Res.Auth_RemovePasswordProtect, Mode=OneWay, Source={x:Static spp:Strings.Auth_RemovePasswordProtect}}"
                IsVisible="{Binding HasPasswordEncrypt}" />
            <ToggleSwitch
                VerticalAlignment="Center"
                Classes="NoContent"
                Command="{Binding ToggleLocalProtection}"
                IsChecked="{Binding HasLocalPcEncrypt, Mode=OneWay}"
                OffContent="{Binding Path=Res.Auth_RemoveMachineValidation, Mode=OneWay, Source={x:Static spp:Strings.Auth_RemoveMachineValidation}}"
                OnContent="{Binding Path=Res.Auth_AddMachineValidation, Mode=OneWay, Source={x:Static spp:Strings.Auth_AddMachineValidation}}"
                ToolTip.Tip="{Binding Path=Res.LocalAuth_ProtectionAuth_IsOnlyCurrentComputerEncryptTip, Mode=OneWay, Source={x:Static spp:Strings.LocalAuth_ProtectionAuth_IsOnlyCurrentComputerEncryptTip}}" />
            <!--<Button
                HorizontalAlignment="Stretch"
                HorizontalContentAlignment="Center"
                Command="{Binding ToggleLocalProtection}"
                Content="{Binding Path=Res.Auth_AddMachineValidation, Mode=OneWay, Source={x:Static spp:Strings.Auth_AddMachineValidation}}"
                IsEnabled="{Binding !HasLocalPcEncrypt}" />
            <Button
                HorizontalAlignment="Stretch"
                HorizontalContentAlignment="Center"
                Command="{Binding ToggleLocalProtection}"
                Content="{Binding Path=Res.Auth_RemoveMachineValidation, Mode=OneWay, Source={x:Static spp:Strings.Auth_RemoveMachineValidation}}"
                IsEnabled="{Binding HasLocalPcEncrypt}" />-->
            <!--<Button
                HorizontalAlignment="Stretch"
                HorizontalContentAlignment="Center"
                Command="{Binding EncryptHelp}"
                Content="{Binding Path=Res.Auth_EncryptionHelp, Mode=OneWay, Source={x:Static spp:Strings.Auth_EncryptionHelp}}" />-->
        </StackPanel>
    </spp:PageBase.PaneContent>
    <Panel>
        <StackPanel
            HorizontalAlignment="Center"
            VerticalAlignment="Center"
            Orientation="Horizontal"
            Spacing="5">
            <StackPanel.IsVisible>
                <MultiBinding Converter="{x:Static BoolConverters.And}">
                    <CompiledBinding Path="!IsVerificationPass" />
                    <CompiledBinding Path="!!Auths.Count" />
                </MultiBinding>
            </StackPanel.IsVisible>
            <TextBlock
                HorizontalAlignment="Center"
                VerticalAlignment="Center"
                Text="{Binding Path=Res.Auth_PasswordProtectedVerifyFirst, Mode=OneWay, Source={x:Static spp:Strings.Auth_PasswordProtectedVerifyFirst}}"
                TextWrapping="WrapWithOverflow" />
            <Button
                HorizontalAlignment="Center"
                VerticalAlignment="Center"
                Command="{Binding Initialize}"
                Content="{Binding Path=Res.Verify, Mode=OneWay, Source={x:Static spp:Strings.Verify}}"
                IsEnabled="True" />
        </StackPanel>

        <spp:ContentLoader IsLoading="{Binding IsLoading}" IsShowNoResultText="{Binding !!!Auths.Count}">
            <!--<spp:ContentLoader.IsVisible>
                <MultiBinding Converter="{x:Static BoolConverters.And}">
                    <CompiledBinding Path="!IsVerificationPass" />
                    <CompiledBinding Path="!!Auths.Count" />
                </MultiBinding>
            </spp:ContentLoader.IsVisible>-->
            <spp:ContentLoader.NoResultMessage>
                <StackPanel
                    HorizontalAlignment="Center"
                    VerticalAlignment="Center"
                    Orientation="Horizontal"
                    Spacing="5">
                    <TextBlock
                        HorizontalAlignment="Center"
                        VerticalAlignment="Center"
                        Text="{Binding Source={x:Static spp:Strings.LocalAuth_NoAuthTip}, Path=Res.LocalAuth_NoAuthTip, Mode=OneWay}"
                        TextWrapping="Wrap" />
                </StackPanel>
            </spp:ContentLoader.NoResultMessage>
            <ItemsRepeater ItemsSource="{Binding Auths}">
                <ItemsRepeater.Layout>
                    <UniformGridLayout
                        ItemsJustification="Start"
                        ItemsStretch="Uniform"
                        MinColumnSpacing="10"
                        MinItemWidth="362"
                        MinRowSpacing="10" />
                </ItemsRepeater.Layout>
                <ItemsRepeater.ItemTemplate>
                    <DataTemplate DataType="{x:Type spp:AuthenticatorItemModel}">
                        <spp:AuthenticatorItem>
                            <spp:AuthenticatorItem.ContextFlyout>
                                <MenuFlyout>
                                    <MenuItem
                                        Command="{Binding $parent[spp:PageBase].((spp:AuthenticatorHomePageViewModel)DataContext).AuthenticatorIndexMoveUp}"
                                        CommandParameter="{Binding}"
                                        Header="{Binding Path=Res.Up, Mode=OneWay, Source={x:Static spp:Strings.Up}}">
                                        <MenuItem.Icon>
                                            <ui:SymbolIcon Symbol="ChevronUp" />
                                        </MenuItem.Icon>
                                    </MenuItem>
                                    <MenuItem
                                        Command="{Binding $parent[spp:PageBase].((spp:AuthenticatorHomePageViewModel)DataContext).AuthenticatorIndexMoveDown}"
                                        CommandParameter="{Binding}"
                                        Header="{Binding Path=Res.MoveDown, Mode=OneWay, Source={x:Static spp:Strings.MoveDown}}">
                                        <MenuItem.Icon>
                                            <ui:SymbolIcon Symbol="ChevronDown" />
                                        </MenuItem.Icon>
                                    </MenuItem>
                                    <!--<MenuItem
                                        Command="{Binding $parent[spp:PageBase].((spp:AuthenticatorHomePageViewModel)DataContext).AuthenticatorIndexSticky}"
                                        CommandParameter="{Binding}"
                                        Header="{Binding Path=Res.FixedTop, Mode=OneWay, Source={x:Static spp:Strings.FixedTop}}">
                                        <MenuItem.Icon>
                                            <ui:SymbolIcon Symbol="Pin" />
                                        </MenuItem.Icon>
                                    </MenuItem>-->
                                    <MenuItem Header="-" />
                                    <MenuItem
                                        Command="{Binding ShowQrCode}"
                                        CommandParameter="{Binding}"
                                        Header="{Binding Path=Res.DisplayQRCode, Mode=OneWay, Source={x:Static spp:Strings.DisplayQRCode}}">
                                        <MenuItem.Icon>
                                            <ui:FontIcon FontFamily="{StaticResource SymbolThemeFontFamily}" Glyph="{StaticResource QrCode}" />
                                        </MenuItem.Icon>
                                    </MenuItem>
                                    <MenuItem
                                        Command="{Binding ShowDetailData}"
                                        CommandParameter="{Binding}"
                                        Header="{Binding Path=Res.ViewDetailedData, Mode=OneWay, Source={x:Static spp:Strings.ViewDetailedData}}">
                                        <MenuItem.Icon>
                                            <ui:SymbolIcon Symbol="Calendar" />
                                        </MenuItem.Icon>
                                    </MenuItem>
                                    <MenuItem
                                        Command="{Binding $parent[spp:PageBase].((spp:AuthenticatorHomePageViewModel)DataContext).DefaultExport}"
                                        CommandParameter="{Binding}"
                                        Header="{Binding Path=Res.DefaultExport, Mode=OneWay, Source={x:Static spp:Strings.DefaultExport}}">
                                        <MenuItem.Icon>
                                            <ui:FontIcon FontFamily="{StaticResource SymbolThemeFontFamily}" Glyph="&#xEDE1;" />
                                        </MenuItem.Icon>
                                    </MenuItem>
                                    <MenuItem
                                        Command="{Binding $parent[spp:PageBase].((spp:AuthenticatorHomePageViewModel)DataContext).ExportAuthWithSdaFile}"
                                        CommandParameter="{Binding}"
                                        Header="{Binding Path=Res.Auth_ExportmaFile, Mode=OneWay, Source={x:Static spp:Strings.Auth_ExportmaFile}}"
                                        IsVisible="{Binding IsSteamAuthenticator, Mode=OneWay}">
                                        <MenuItem.Icon>
                                            <ui:FontIcon FontFamily="{StaticResource SymbolThemeFontFamily}" Glyph="&#xEDE1;" />
                                        </MenuItem.Icon>
                                    </MenuItem>
                                    <MenuItem Header="-" />
                                    <MenuItem
                                        Command="{Binding $parent[spp:PageBase].((spp:AuthenticatorHomePageViewModel)DataContext).UnbindingSteamAuthAsync}"
                                        CommandParameter="{Binding}"
                                        Header="{Binding Path=Res.LocalAuth_RemoveAuth, Mode=OneWay, Source={x:Static spp:Strings.LocalAuth_RemoveAuth}}"
                                        IsVisible="{Binding IsSteamAuthenticator, Mode=OneWay}">
                                        <MenuItem.Icon>
                                            <ui:FontIcon FontFamily="{StaticResource SymbolThemeFontFamily}" Glyph="&#xECC9;" />
                                        </MenuItem.Icon>
                                    </MenuItem>
                                    <MenuItem
                                        Command="{Binding $parent[spp:PageBase].((spp:AuthenticatorHomePageViewModel)DataContext).DeleteAuthAsync}"
                                        CommandParameter="{Binding}"
                                        Foreground="{DynamicResource SystemFillColorCriticalBrush}"
                                        Header="{Binding Path=Res.LocalAuth_Delete, Mode=OneWay, Source={x:Static spp:Strings.LocalAuth_Delete}}">
                                        <MenuItem.Icon>
                                            <ui:SymbolIcon Symbol="Delete" />
                                        </MenuItem.Icon>
                                    </MenuItem>
                                </MenuFlyout>
                            </spp:AuthenticatorItem.ContextFlyout>
                        </spp:AuthenticatorItem>
                    </DataTemplate>
                </ItemsRepeater.ItemTemplate>
            </ItemsRepeater>
        </spp:ContentLoader>
    </Panel>
</spp:PageBase>
