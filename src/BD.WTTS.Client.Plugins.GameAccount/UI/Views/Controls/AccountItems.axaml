<UserControl
    x:Class="BD.WTTS.UI.Views.Controls.AccountItems"
    xmlns="https://github.com/avaloniaui"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:i="using:Avalonia.Xaml.Interactivity"
    xmlns:ia="using:Avalonia.Xaml.Interactions.Core"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:s="https://steampp.net/services"
    xmlns:spp="https://steampp.net/ui"
    xmlns:ui="using:FluentAvalonia.UI.Controls"
    d:DesignHeight="450"
    d:DesignWidth="800"
    x:CompileBindings="True"
    x:DataType="spp:PlatformAccount"
    mc:Ignorable="d">
    <UserControl.Resources>
        <ui:FAMenuFlyout x:Key="SharedMenuFlyout" x:DataType="spp:IAccount">
            <ui:MenuFlyoutItem
                Command="{Binding $parent[UserControl].((spp:PlatformAccount)DataContext).SwapToAccountCommand}"
                CommandParameter="{Binding}"
                Text="切换到此账号" />
            <ui:MenuFlyoutItem
                Click="SteamOfflineModeStartMenuItem_Click"
                IsVisible="{Binding $parent[UserControl].((spp:PlatformAccount)DataContext).IsSteamPlatform}"
                Text="以离线模式启动" />
            <ui:MenuFlyoutSubItem IsVisible="{Binding $parent[UserControl].((spp:PlatformAccount)DataContext).IsSteamPlatform}" Text="登录为">
                <ui:MenuFlyoutItem
                    Click="SteamPersonaStateSwapMenuItem_Click"
                    Tag="{x:Static spp:PersonaState.Invisible}"
                    Text="隐身" />
                <ui:MenuFlyoutItem
                    Click="SteamPersonaStateSwapMenuItem_Click"
                    Tag="{x:Static spp:PersonaState.Offline}"
                    Text="离线" />
                <ui:MenuFlyoutItem
                    Click="SteamPersonaStateSwapMenuItem_Click"
                    Tag="{x:Static spp:PersonaState.Online}"
                    Text="在线" />
                <ui:MenuFlyoutItem
                    Click="SteamPersonaStateSwapMenuItem_Click"
                    Tag="{x:Static spp:PersonaState.Busy}"
                    Text="忙碌" />
                <ui:MenuFlyoutItem
                    Click="SteamPersonaStateSwapMenuItem_Click"
                    Tag="{x:Static spp:PersonaState.Away}"
                    Text="离开" />
                <ui:MenuFlyoutItem
                    Click="SteamPersonaStateSwapMenuItem_Click"
                    Tag="{x:Static spp:PersonaState.Snooze}"
                    Text="打盹" />
                <ui:MenuFlyoutItem
                    Click="SteamPersonaStateSwapMenuItem_Click"
                    Tag="{x:Static spp:PersonaState.LookingToTrade}"
                    Text="想交易" />
                <ui:MenuFlyoutItem
                    Click="SteamPersonaStateSwapMenuItem_Click"
                    Tag="{x:Static spp:PersonaState.LookingToPlay}"
                    Text="想玩游戏" />
            </ui:MenuFlyoutSubItem>
            <ui:MenuFlyoutSeparator />
            <ui:MenuFlyoutSubItem IsVisible="{Binding $parent[UserControl].((spp:PlatformAccount)DataContext).IsSteamPlatform}" Text="{Binding Path=Res.Copy, Mode=OneWay, Source={x:Static s:ResourceService.Current}}">
                <ui:MenuFlyoutSubItem Text="复制个人资料">
                    <ui:MenuFlyoutItem Command="{Binding CopyToClipboardCommand, Source={x:Static spp:App.Instance}}" Text="社区 URL">
                        <ui:MenuFlyoutItem.CommandParameter>
                            <MultiBinding Converter="{StaticResource StringFormatConverter}">
                                <CompiledBinding Path="." Source="{x:Static spp:SteamApiUrls.STEAM_PROFILES_URL}" />
                                <CompiledBinding Path="AccountId" />
                            </MultiBinding>
                        </ui:MenuFlyoutItem.CommandParameter>
                    </ui:MenuFlyoutItem>
                    <ui:MenuFlyoutItem
                        Command="{Binding CopyToClipboardCommand, Source={x:Static spp:App.Instance}}"
                        CommandParameter="{Binding DisplayName}"
                        Text="Steam 昵称" />
                    <ui:MenuFlyoutItem
                        Command="{Binding CopyToClipboardCommand, Source={x:Static spp:App.Instance}}"
                        CommandParameter="{Binding AccountName}"
                        Text="Steam 用户名" />
                </ui:MenuFlyoutSubItem>
                <ui:MenuFlyoutSubItem IsVisible="{Binding $parent[UserControl].((spp:PlatformAccount)DataContext).IsSteamPlatform}" Text="复制 SteamID">
                    <ui:MenuFlyoutItem Click="CopySteamIdMenuItem_Click" Text="SteamID [STEAM0:~]">
                        <ui:MenuFlyoutItem.Tag>
                            <x:Int32>1</x:Int32>
                        </ui:MenuFlyoutItem.Tag>
                    </ui:MenuFlyoutItem>
                    <ui:MenuFlyoutItem Click="CopySteamIdMenuItem_Click" Text="SteamID3 [U:1:~]">
                        <ui:MenuFlyoutItem.Tag>
                            <x:Int32>2</x:Int32>
                        </ui:MenuFlyoutItem.Tag>
                    </ui:MenuFlyoutItem>
                    <ui:MenuFlyoutItem Click="CopySteamIdMenuItem_Click" Text="SteamID32">
                        <ui:MenuFlyoutItem.Tag>
                            <x:Int32>3</x:Int32>
                        </ui:MenuFlyoutItem.Tag>
                    </ui:MenuFlyoutItem>
                    <ui:MenuFlyoutItem Click="CopySteamIdMenuItem_Click" Text="SteamID64 7656~">
                        <ui:MenuFlyoutItem.Tag>
                            <x:Int32>4</x:Int32>
                        </ui:MenuFlyoutItem.Tag>
                    </ui:MenuFlyoutItem>
                </ui:MenuFlyoutSubItem>
            </ui:MenuFlyoutSubItem>
            <ui:MenuFlyoutSubItem IsVisible="{Binding $parent[UserControl].((spp:PlatformAccount)DataContext).IsSteamPlatform}" Text="{Binding Path=Res.OpenLink, Mode=OneWay, Source={x:Static s:ResourceService.Current}}">
                <ui:MenuFlyoutItem Command="{Binding OpenBrowserCommand, Source={x:Static spp:App.Instance}}" Text="Steam 社区">
                    <ui:MenuFlyoutItem.CommandParameter>
                        <MultiBinding Converter="{StaticResource StringFormatConverter}">
                            <CompiledBinding Path="." Source="{x:Static spp:SteamApiUrls.STEAM_PROFILES_URL}" />
                            <CompiledBinding Path="AccountId" />
                        </MultiBinding>
                    </ui:MenuFlyoutItem.CommandParameter>
                </ui:MenuFlyoutItem>
                <ui:MenuFlyoutItem Command="{Binding OpenBrowserCommand, Source={x:Static spp:App.Instance}}" Text="SteamRep">
                    <ui:MenuFlyoutItem.CommandParameter>
                        <MultiBinding Converter="{StaticResource StringFormatConverter}">
                            <CompiledBinding Path="." Source="{x:Static spp:SteamApiUrls.STEAMREP_USER_URL}" />
                            <CompiledBinding Path="AccountId" />
                        </MultiBinding>
                    </ui:MenuFlyoutItem.CommandParameter>
                </ui:MenuFlyoutItem>
                <ui:MenuFlyoutItem Command="{Binding OpenBrowserCommand, Source={x:Static spp:App.Instance}}" Text="SteamRepCN">
                    <ui:MenuFlyoutItem.CommandParameter>
                        <MultiBinding Converter="{StaticResource StringFormatConverter}">
                            <CompiledBinding Path="." Source="{x:Static spp:SteamApiUrls.STEAMREPCN_USER_URL}" />
                            <CompiledBinding Path="AccountId" />
                        </MultiBinding>
                    </ui:MenuFlyoutItem.CommandParameter>
                </ui:MenuFlyoutItem>
                <ui:MenuFlyoutItem Command="{Binding OpenBrowserCommand, Source={x:Static spp:App.Instance}}" Text="SteamDB">
                    <ui:MenuFlyoutItem.CommandParameter>
                        <MultiBinding Converter="{StaticResource StringFormatConverter}">
                            <CompiledBinding Path="." Source="{x:Static spp:SteamApiUrls.STEAMDB_USER_CALC_URL}" />
                            <CompiledBinding Path="AccountId" />
                        </MultiBinding>
                    </ui:MenuFlyoutItem.CommandParameter>
                </ui:MenuFlyoutItem>
                <ui:MenuFlyoutItem Command="{Binding OpenBrowserCommand, Source={x:Static spp:App.Instance}}" Text="SteamGifts">
                    <ui:MenuFlyoutItem.CommandParameter>
                        <MultiBinding Converter="{StaticResource StringFormatConverter}">
                            <CompiledBinding Path="." Source="{x:Static spp:SteamApiUrls.STEAMGIFTS_USER_URL}" />
                            <CompiledBinding Path="AccountId" />
                        </MultiBinding>
                    </ui:MenuFlyoutItem.CommandParameter>
                </ui:MenuFlyoutItem>
                <ui:MenuFlyoutItem Command="{Binding OpenBrowserCommand, Source={x:Static spp:App.Instance}}" Text="SteamTrades">
                    <ui:MenuFlyoutItem.CommandParameter>
                        <MultiBinding Converter="{StaticResource StringFormatConverter}">
                            <CompiledBinding Path="." Source="{x:Static spp:SteamApiUrls.STEAMTRADES_USER_URL}" />
                            <CompiledBinding Path="AccountId" />
                        </MultiBinding>
                    </ui:MenuFlyoutItem.CommandParameter>
                </ui:MenuFlyoutItem>
                <ui:MenuFlyoutItem Command="{Binding OpenBrowserCommand, Source={x:Static spp:App.Instance}}" Text="Achievement Stats">
                    <ui:MenuFlyoutItem.CommandParameter>
                        <MultiBinding Converter="{StaticResource StringFormatConverter}">
                            <CompiledBinding Path="." Source="{x:Static spp:SteamApiUrls.STEAMACHIEVEMENT_STATS_USER_URL}" />
                            <CompiledBinding Path="AccountId" />
                        </MultiBinding>
                    </ui:MenuFlyoutItem.CommandParameter>
                </ui:MenuFlyoutItem>
                <ui:MenuFlyoutItem Command="{Binding OpenBrowserCommand, Source={x:Static spp:App.Instance}}" Text="Backpack.tf">
                    <ui:MenuFlyoutItem.CommandParameter>
                        <MultiBinding Converter="{StaticResource StringFormatConverter}">
                            <CompiledBinding Path="." Source="{x:Static spp:SteamApiUrls.STEAMBACKPACK_USER_URL}" />
                            <CompiledBinding Path="AccountId" />
                        </MultiBinding>
                    </ui:MenuFlyoutItem.CommandParameter>
                </ui:MenuFlyoutItem>
            </ui:MenuFlyoutSubItem>
            <ui:MenuFlyoutSeparator IsVisible="{Binding $parent[UserControl].((spp:PlatformAccount)DataContext).IsSteamPlatform}" />
            <ui:MenuFlyoutItem
                Command="{Binding $parent[UserControl].((spp:PlatformAccount)DataContext).EditRemarkCommand}"
                CommandParameter="{Binding}"
                Text="修改备注名" />
            <ui:MenuFlyoutItem
                Command="{Binding $parent[UserControl].((spp:PlatformAccount)DataContext).SetAccountAvatarCommand}"
                CommandParameter="{Binding}"
                IsVisible="{Binding !$parent[UserControl].((spp:PlatformAccount)DataContext).IsSteamPlatform}"
                Text="修改头像图片" />
            <ui:MenuFlyoutSeparator />
            <ui:MenuFlyoutItem
                Command="{Binding $parent[UserControl].((spp:PlatformAccount)DataContext).CreateShortcutCommand}"
                CommandParameter="{Binding}"
                IsVisible="{Binding $parent[UserControl].((spp:PlatformAccount)DataContext).IsWindwos}"
                Text="创建桌面快捷方式" />
            <ui:MenuFlyoutItem
                Click="OpenUserDataFolderMenuItem_Click"
                IsVisible="{Binding $parent[UserControl].((spp:PlatformAccount)DataContext).IsSteamPlatform}"
                Text="{Binding Path=Res.UserChange_ShowUserDataFolder, Mode=OneWay, Source={x:Static s:ResourceService.Current}}" />
            <ui:MenuFlyoutItem
                Command="{Binding $parent[UserControl].((spp:PlatformAccount)DataContext).DeleteAccountCommand}"
                CommandParameter="{Binding}"
                Foreground="{DynamicResource SystemFillColorCriticalBrush}"
                Text="{Binding Path=Res.Delete, Mode=OneWay, Source={x:Static s:ResourceService.Current}}" />
        </ui:FAMenuFlyout>
    </UserControl.Resources>
    <ScrollViewer>
        <ScrollViewer.GestureRecognizers>
            <ScrollGestureRecognizer CanHorizontallyScroll="True" CanVerticallyScroll="True" />
        </ScrollViewer.GestureRecognizers>
        <spp:ContentLoader
            IsLoading="{Binding IsLoading}"
            IsShowNoResultText="{Binding !!!Accounts.Count, Mode=OneWay}"
            NoResultMessage="{Binding Path=Res.UserChange_NoUserTip, Mode=OneWay, Source={x:Static s:ResourceService.Current}}">
            <ItemsControl Grid.Row="1" ItemsSource="{Binding Accounts}">
                <ItemsControl.ItemsPanel>
                    <ItemsPanelTemplate>
                        <WrapPanel />
                    </ItemsPanelTemplate>
                </ItemsControl.ItemsPanel>
                <ItemsControl.ItemTemplate>
                    <DataTemplate DataType="spp:IAccount">
                        <Border Margin="5" spp:Animations.EnableAnimations="True">
                            <spp:AppItem
                                x:Name="Item"
                                Title="{Binding DisplayName}"
                                MaxWidth="128"
                                Classes="Vertical"
                                ContextFlyout="{StaticResource SharedMenuFlyout}"
                                Description="{Binding LastLoginTime, StringFormat={}{0:yyyy-MM-dd HH:mm:ss}}"
                                MoreFlyout="{StaticResource SharedMenuFlyout}"
                                Status="{Binding Path=Res.UserChange_RecentLogin, Mode=OneWay, Source={x:Static s:ResourceService.Current}}"
                                Tags="{Binding AliasName}">
                                <ToolTip.Tip>
                                    <TextBlock>
                                        <Run Text="双击可快速切换到此账号登录" />
                                        <LineBreak />
                                        <Run FontSize="16" Text="{Binding DisplayName}" />
                                        <LineBreak />
                                        <Run Text="{Binding AliasName}" />
                                    </TextBlock>
                                </ToolTip.Tip>
                                <spp:AppItem.Status>
                                    <Border Classes="Status" IsVisible="{Binding MostRecent}">
                                        <TextBlock Text="{Binding Path=Res.UserChange_RecentLogin, Mode=OneWay, Source={x:Static s:ResourceService.Current}}" />
                                    </Border>
                                    <!--<Button
                                        Classes="accent"
                                        Command="{Binding $parent[UserControl].((spp:PlatformAccount)DataContext).SwapToAccountCommand}"
                                        CommandParameter="{Binding}"
                                        Content="一键切换" />-->
                                </spp:AppItem.Status>
                                <i:Interaction.Behaviors>
                                    <ia:EventTriggerBehavior EventName="DoubleTapped" SourceObject="Item">
                                        <ia:InvokeCommandAction Command="{Binding $parent[UserControl].((spp:PlatformAccount)DataContext).SwapToAccountCommand}" CommandParameter="{Binding}" />
                                    </ia:EventTriggerBehavior>
                                </i:Interaction.Behaviors>
                                <spp:AppItem.Image>
                                    <Panel>
                                        <spp:Image2
                                            Width="128"
                                            Height="128"
                                            FallbackSource="avares://BD.WTTS.Client.Avalonia/UI/Assets/avatar.jpg"
                                            RenderOptions.BitmapInterpolationMode="HighQuality"
                                            Source="{Binding ImagePath}"
                                            Stretch="UniformToFill" />
                                        <spp:Image2
                                            Width="155"
                                            Height="155"
                                            IsVisible="{Binding $parent[UserControl].((spp:PlatformAccount)DataContext).IsSteamPlatform}"
                                            RenderOptions.BitmapInterpolationMode="MediumQuality"
                                            Source="{Binding AvatarFramePath}"
                                            Stretch="UniformToFill">
                                            <!--<spp:Image2.IsVisible>
                                                <MultiBinding Converter="{x:Static BoolConverters.And}">
                                                    <CompiledBinding ElementName="u" Path="DataContext.IsSteamPlatform" />
                                                    <CompiledBinding
                                                        Converter="{StaticResource IsNullConverter}"
                                                        ConverterParameter="invert"
                                                        Path="AvatarFramePath" />
                                                </MultiBinding>
                                            </spp:Image2.IsVisible>-->
                                        </spp:Image2>
                                    </Panel>
                                </spp:AppItem.Image>
                            </spp:AppItem>
                        </Border>
                    </DataTemplate>
                </ItemsControl.ItemTemplate>
            </ItemsControl>
        </spp:ContentLoader>
    </ScrollViewer>
</UserControl>
