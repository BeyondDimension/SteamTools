<spp:PageBase
    x:Class="BD.WTTS.UI.Views.Pages.GameListPage"
    xmlns="https://github.com/avaloniaui"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:ms="https://steampp.net/settings"
    xmlns:s="https://steampp.net/services"
    xmlns:spp="https://steampp.net/ui"
    xmlns:ui="using:FluentAvalonia.UI.Controls"
    Title="{Binding Name, Source={x:Static s:Plugin.Instance}, Mode=OneWay}"
    d:DesignHeight="450"
    d:DesignWidth="800"
    x:CompileBindings="True"
    x:DataType="spp:GameListPageViewModel"
    Description="{Binding Description, Source={x:Static s:Plugin.Instance}, Mode=OneWay}"
    Subtitle="{Binding Author, Source={x:Static s:Plugin.Instance}, Mode=OneWay, Converter={StaticResource StringFormatConverter}, ConverterParameter=Plugin_Author}"
    mc:Ignorable="d">
    <spp:PageBase.Resources>
        <ui:FAMenuFlyout x:Key="SharedMenuFlyout" x:DataType="spp:SteamApp">
            <ui:MenuFlyoutItem
                Command="{Binding $parent[spp:PageBase].((spp:GameListPageViewModel)DataContext).InstallOrStartAppCommand}"
                CommandParameter="{Binding}"
                IconSource="Play"
                IsVisible="{Binding IsInstalled}"
                Text="{Binding Path=Res.GameList_Play, Mode=OneWay, Source={x:Static spp:Strings.GameList_Play}}" />
            <ui:MenuFlyoutItem
                Command="{Binding $parent[spp:PageBase].((spp:GameListPageViewModel)DataContext).InstallOrStartAppCommand}"
                CommandParameter="{Binding}"
                IconSource="Download"
                IsVisible="{Binding !IsInstalled}"
                Text="{Binding Path=Res.GameList_Install, Mode=OneWay, Source={x:Static spp:Strings.GameList_Install}}" />
            <ui:MenuFlyoutItem
                Command="{Binding $parent[spp:PageBase].((spp:GameListPageViewModel)DataContext).EditAppInfoClickCommand}"
                CommandParameter="{Binding}"
                IconSource="Edit"
                Text="{Binding Path=Res.GameList_EditAppInfo, Mode=OneWay, Source={x:Static spp:Strings.GameList_EditAppInfo}}" />
            <ui:MenuFlyoutItem
                Command="{Binding $parent[spp:PageBase].((spp:GameListPageViewModel)DataContext).ManageCloudArchive_ClickCommand}"
                CommandParameter="{Binding}"
                IconSource="CloudSync"
                IsVisible="{Binding IsCloudArchive}"
                Text="{Binding Path=Res.GameList_CloudArchiveManager, Mode=OneWay, Source={x:Static spp:Strings.GameList_CloudArchiveManager}}" />
            <ui:MenuFlyoutItem
                Command="{Binding $parent[spp:PageBase].((spp:GameListPageViewModel)DataContext).UnlockAchievement_ClickCommand}"
                CommandParameter="{Binding}"
                IconSource="Diagnostic"
                Text="{Binding Path=Res.Achievement_Manage, Mode=OneWay, Source={x:Static spp:Strings.Achievement_Manage}}">
                <ui:MenuFlyoutItem.IconSource>
                    <ui:FontIconSource FontFamily="{StaticResource SymbolThemeFontFamily}" Glyph="&#xEB4F;" />
                </ui:MenuFlyoutItem.IconSource>
            </ui:MenuFlyoutItem>
            <ui:MenuFlyoutItem
                Command="{Binding $parent[spp:PageBase].((spp:GameListPageViewModel)DataContext).AddAFKAppListCommand}"
                CommandParameter="{Binding}"
                Text="{Binding Path=Res.GameList_AddAfkGameList, Mode=OneWay, Source={x:Static spp:Strings.GameList_AddAfkGameList}}">
                <ui:MenuFlyoutItem.IconSource>
                    <ui:FontIconSource FontFamily="{StaticResource SymbolThemeFontFamily}" Glyph="&#xEC92;" />
                </ui:MenuFlyoutItem.IconSource>
            </ui:MenuFlyoutItem>
            <ui:MenuFlyoutSeparator />
            <ui:MenuFlyoutItem
                Command="{Binding $parent[spp:PageBase].((spp:GameListPageViewModel)DataContext).NavAppToSteamViewCommand}"
                CommandParameter="{Binding}"
                Text="{Binding Path=Res.GameList_NavToSteamView, Mode=OneWay, Source={x:Static spp:Strings.GameList_NavToSteamView}}">
                <ui:MenuFlyoutItem.IconSource>
                    <ui:PathIconSource Data="{StaticResource Steam}" />
                </ui:MenuFlyoutItem.IconSource>
            </ui:MenuFlyoutItem>
            <ui:MenuFlyoutItem
                Command="{Binding $parent[spp:PageBase].((spp:GameListPageViewModel)DataContext).NavAppScreenshotToSteamViewCommand}"
                CommandParameter="{Binding}"
                Text="{Binding Path=Res.GameList_NavScreenshotToSteamView, Mode=OneWay, Source={x:Static spp:Strings.GameList_NavScreenshotToSteamView}}">
                <ui:MenuFlyoutItem.IconSource>
                    <ui:SymbolIconSource Symbol="Image" />
                </ui:MenuFlyoutItem.IconSource>
            </ui:MenuFlyoutItem>
            <ui:MenuFlyoutItem
                Command="{Binding $parent[spp:PageBase].((spp:GameListPageViewModel)DataContext).OpenFolderCommand}"
                CommandParameter="{Binding}"
                IconSource="OpenFolder"
                IsVisible="{Binding IsInstalled}"
                Text="{Binding Path=Res.GameList_OpenFolder, Mode=OneWay, Source={x:Static spp:Strings.GameList_OpenFolder}}" />
            <ui:MenuFlyoutSeparator />
            <ui:MenuFlyoutSubItem Text="{Binding Path=Res.OpenLink, Mode=OneWay, Source={x:Static spp:Strings.OpenLink}}">
                <ui:MenuFlyoutItem
                    Click="AppOpenLink_MenuItem_Click"
                    IconSource="Link"
                    Text="{Binding Path=Res.GameList_OpenStoreUrl, Mode=OneWay, Source={x:Static spp:Strings.GameList_OpenStoreUrl}}" />
                <ui:MenuFlyoutItem
                    Click="AppOpenLink_MenuItem_Click"
                    IconSource="Link"
                    Tag="steamdb"
                    Text="{Binding Path=Res.GameList_OpenSteamDBUrl, Mode=OneWay, Source={x:Static spp:Strings.GameList_OpenSteamDBUrl}}" />
                <ui:MenuFlyoutItem
                    Click="AppOpenLink_MenuItem_Click"
                    IconSource="Link"
                    Tag="steamcardexchange"
                    Text="{Binding Path=Res.GameList_OpenSteamCardUrl, Mode=OneWay, Source={x:Static spp:Strings.GameList_OpenSteamCardUrl}}" />
            </ui:MenuFlyoutSubItem>
            <ui:MenuFlyoutSeparator />
            <ui:MenuFlyoutItem
                Command="{Binding $parent[spp:PageBase].((spp:GameListPageViewModel)DataContext).AddHideAppListCommand}"
                CommandParameter="{Binding}"
                Foreground="{DynamicResource SystemFillColorCriticalBrush}"
                IconSource="Hide"
                Text="{Binding Path=Res.GameList_HideTheGame, Mode=OneWay, Source={x:Static spp:Strings.GameList_HideTheGame}}">
                <ui:MenuFlyoutItem.IconSource>
                    <ui:FontIconSource FontFamily="{StaticResource SymbolThemeFontFamily}" Glyph="{StaticResource Hide}" />
                </ui:MenuFlyoutItem.IconSource>
            </ui:MenuFlyoutItem>

        </ui:FAMenuFlyout>
    </spp:PageBase.Resources>
    <spp:PageBase.PreviewImage>
        <ui:ImageIconSource Source="{Binding Icon, Source={x:Static s:Plugin.Instance}, Mode=OneWay, Converter={StaticResource BitmapAssetValueConverter}}" />
    </spp:PageBase.PreviewImage>
    <spp:PageBase.ActionContent>
        <StackPanel Orientation="Horizontal" Spacing="2">
            <!--<ToggleButton
                HorizontalContentAlignment="Center"
                VerticalContentAlignment="Center"
                Theme="{StaticResource TransparentButton}"
                ToolTip.Tip="仅显示已安装的游戏">
				<Panel>
					<Viewbox
                        Width="20"
                        Height="20"
                        HorizontalAlignment="Left">
						<ui:SymbolIcon Symbol="Save" />
					</Viewbox>
				</Panel>
			</ToggleButton>-->
            <ToggleButton
                Padding="8,4"
                DockPanel.Dock="Right"
                IsChecked="{Binding $parent[spp:PageBase].IsPaneOpen, Mode=TwoWay}"
                Theme="{StaticResource TransparentToggleButton}">
                <Panel>
                    <Viewbox
                        Width="16"
                        Height="16"
                        HorizontalAlignment="Left">
                        <ui:SymbolIcon Symbol="Filter" />
                    </Viewbox>
                    <TextBlock
                        Margin="28,4,0,4"
                        HorizontalAlignment="Left"
                        VerticalAlignment="Center"
                        Text="{Binding Path=Res.Filter, Mode=OneWay, Source={x:Static spp:Strings.Filter}}" />
                </Panel>
            </ToggleButton>
            <!--<Button
                Padding="8,4"
                HorizontalContentAlignment="Center"
                VerticalContentAlignment="Center"
                Theme="{StaticResource TransparentButton}">
                <Panel>
                    <Viewbox
                        Width="16"
                        Height="16"
                        HorizontalAlignment="Left">
                        <ui:SymbolIcon Symbol="AllApps" />
                    </Viewbox>
                    <TextBlock
                        Margin="28,4,0,4"
                        HorizontalAlignment="Left"
                        VerticalAlignment="Center"
                        Text="更多功能" />
                </Panel>
            </Button>-->
            <Button
                Padding="8,4"
                Command="{Binding RefreshAppCommand}"
                DockPanel.Dock="Right"
                Theme="{StaticResource TransparentButton}">
                <Panel>
                    <Viewbox
                        Width="16"
                        Height="16"
                        HorizontalAlignment="Left">
                        <ui:SymbolIcon Symbol="Refresh" />
                    </Viewbox>
                    <TextBlock
                        Margin="28,4,0,4"
                        HorizontalAlignment="Left"
                        VerticalAlignment="Center"
                        Text="{Binding Path=Res.Refresh, Mode=OneWay, Source={x:Static spp:Strings.Refresh}}" />
                </Panel>
            </Button>
            <DropDownButton
                Padding="8"
                HorizontalContentAlignment="Center"
                VerticalContentAlignment="Center"
                Content="{StaticResource More}"
                FontFamily="{StaticResource SymbolThemeFontFamily}"
                FontSize="20"
                Theme="{StaticResource TransparentButton}">
                <DropDownButton.Flyout>
                    <ui:FAMenuFlyout Placement="BottomEdgeAlignedRight">
                        <ui:MenuFlyoutItem Command="{Binding ShowHideAppCommand}" Text="{Binding Path=Res.Game_Hidden, Mode=OneWay, Source={x:Static spp:Strings.Game_Hidden}}" />
                        <!--<ui:MenuFlyoutItem x:Name="PluginSettingButton" Text="{Binding Path=Res.Settings_Plugin, Mode=OneWay, Source={x:Static spp:Strings.Settings_Plugin}}" />-->
                        <ui:MenuFlyoutSeparator />
                        <ui:MenuFlyoutItem IsEnabled="False">
                            <ui:MenuFlyoutItem.Text>
                                <MultiBinding StringFormat="{}{0}{1}">
                                    <CompiledBinding
                                        Mode="OneWay"
                                        Path="Res.Plugin_Version"
                                        Source="{x:Static spp:Strings.Plugin_Version}" />
                                    <CompiledBinding
                                        Mode="OneWay"
                                        Path="Version"
                                        Source="{x:Static s:Plugin.Instance}" />
                                </MultiBinding>
                            </ui:MenuFlyoutItem.Text>
                        </ui:MenuFlyoutItem>
                        <!--<ui:MenuFlyoutItem Text="{Binding Path=Res.ViewInStore, Mode=OneWay, Source={x:Static spp:Strings.ViewInStore}}" />
                        <ui:MenuFlyoutItem Text="{Binding Path=Res.UseHelp, Mode=OneWay, Source={x:Static spp:Strings.UseHelp}}" />
                        <ui:MenuFlyoutItem Text="{Binding Path=Res.AboutThisPlugin, Mode=OneWay, Source={x:Static spp:Strings.AboutThisPlugin}}" />-->
                    </ui:FAMenuFlyout>
                </DropDownButton.Flyout>
            </DropDownButton>
        </StackPanel>
    </spp:PageBase.ActionContent>
    <spp:PageBase.PaneContent>
        <StackPanel Margin="15,20" Spacing="10">
            <TextBlock
                Grid.Row="2"
                VerticalAlignment="Center"
                Text="{Binding SteamApps.Count, Converter={StaticResource StringFormatConverter}, ConverterParameter=GameList_FindAppsText}"
                Theme="{StaticResource CaptionTextBlockStyle}" />

            <AutoCompleteBox
                MinWidth="280"
                VerticalAlignment="Center"
                Classes="Search"
                Text="{Binding SearchText}" />

            <!--<TextBlock Text="{Binding Path=Res.Game_LayoutWay, Mode=OneWay, Source={x:Static spp:Strings.Game_LayoutWay}}" Theme="{StaticResource BodyStrongTextBlockStyle}" />

            <TabStrip
                Background="{DynamicResource ControlOnImageFillColorDefaultBrush}"
                CornerRadius="{StaticResource ControlCornerRadius}"
                ItemContainerTheme="{StaticResource TabItemStyle}"
                SelectedIndex="{Binding Path=Value, Mode=TwoWay, Source={x:Static ms:GameLibrarySettings.GameLibraryLayoutType}}"
                Theme="{StaticResource TabStripStyle}">
                <TabStripItem Content="&#xE8E4;" FontFamily="{StaticResource SymbolThemeFontFamily}" />
                <TabStripItem Content="&#xF0E2;" FontFamily="{StaticResource SymbolThemeFontFamily}" />
                <TabStripItem Content="&#xE80A;" FontFamily="{StaticResource SymbolThemeFontFamily}" />
            </TabStrip>-->

            <TextBlock Text="{Binding Path=Res.FilterRequirement, Mode=OneWay, Source={x:Static spp:Strings.FilterRequirement}}" Theme="{StaticResource BodyStrongTextBlockStyle}" />

            <DockPanel>
                <DropDownButton
                    Width="200"
                    Height="36"
                    VerticalAlignment="Center"
                    HorizontalContentAlignment="Stretch"
                    VerticalContentAlignment="Center">
                    <DropDownButton.Content>
                        <TextBlock
                            VerticalAlignment="Center"
                            DockPanel.Dock="Left"
                            Text="{Binding TypeFilterString}"
                            TextTrimming="CharacterEllipsis"
                            Theme="{StaticResource CaptionTextBlockStyle}" />
                    </DropDownButton.Content>
                    <DropDownButton.Styles>
                        <Style Selector="FlyoutPresenter">
                            <Setter Property="Padding" Value="0" />
                        </Style>
                    </DropDownButton.Styles>
                    <DropDownButton.Flyout>
                        <Flyout FlyoutPresenterClasses="NoPadding" Placement="Bottom">
                            <Border Width="{Binding $parent.Width}" Height="200">
                                <ScrollViewer Padding="10,5">
                                    <ItemsControl ItemsSource="{Binding AppTypeFiltres}">
                                        <ItemsControl.ItemTemplate>
                                            <DataTemplate>
                                                <DataTemplate.DataType>
                                                    <x:Type x:TypeArguments="spp:SteamAppType" TypeName="spp:EnumModel" />
                                                </DataTemplate.DataType>
                                                <DockPanel>
                                                    <CheckBox VerticalAlignment="Center" IsChecked="{Binding Enable, Mode=TwoWay}">
                                                        <StackPanel Orientation="Horizontal">
                                                            <StackPanel.Styles>
                                                                <Style Selector="TextBlock.count">
                                                                    <Setter Property="VerticalAlignment" Value="Center" />
                                                                    <Setter Property="FontSize" Value="10" />
                                                                    <Setter Property="Foreground" Value="{DynamicResource TextFillColorSecondaryBrush}" />
                                                                </Style>
                                                            </StackPanel.Styles>
                                                            <TextBlock
                                                                VerticalAlignment="Center"
                                                                Text="{Binding LocalizationName}"
                                                                Theme="{StaticResource CaptionTextBlockStyle}" />
                                                            <TextBlock
                                                                Margin="5,0,0,0"
                                                                Classes="count"
                                                                Text="(" />
                                                            <TextBlock Classes="count" Text="{Binding Count}" />
                                                            <TextBlock Classes="count" Text=")" />
                                                        </StackPanel>
                                                    </CheckBox>
                                                </DockPanel>
                                            </DataTemplate>
                                        </ItemsControl.ItemTemplate>
                                    </ItemsControl>
                                </ScrollViewer>
                            </Border>
                        </Flyout>
                    </DropDownButton.Flyout>
                </DropDownButton>

                <StackPanel
                    HorizontalAlignment="Right"
                    DockPanel.Dock="Right"
                    Orientation="Horizontal"
                    Spacing="4">
                    <ToggleButton
                        Padding="8"
                        IsChecked="{Binding IsInstalledFilter, Mode=TwoWay}"
                        Theme="{StaticResource TransparentToggleButton}"
                        ToolTip.Tip="{Binding Path=Res.GameList_OnlyInstalled, Mode=OneWay, Source={x:Static spp:Strings.GameList_OnlyInstalled}}">
                        <Viewbox Width="20" Height="20">
                            <ui:SymbolIcon Symbol="Play" />
                        </Viewbox>
                    </ToggleButton>

                    <ToggleButton
                        Padding="8"
                        IsChecked="{Binding IsCloudArchiveFilter, Mode=TwoWay}"
                        Theme="{StaticResource TransparentToggleButton}"
                        ToolTip.Tip="{Binding Path=Res.GameList_OnlyCloudArchive, Mode=OneWay, Source={x:Static spp:Strings.GameList_OnlyCloudArchive}}">
                        <Viewbox Width="20" Height="20">
                            <ui:SymbolIcon Symbol="CloudSyncComplete" />
                        </Viewbox>
                    </ToggleButton>
                </StackPanel>
            </DockPanel>
        </StackPanel>
    </spp:PageBase.PaneContent>
    <spp:ContentLoader
        IsLoading="{Binding Source={x:Static s:SteamConnectService.Current}, Path=IsLoadingGameList, Mode=OneWay}"
        IsShowNoResultText="{Binding !!!SteamApps.Count}"
        NoResultMessage="{Binding Path=Res.GameList_IsEmpty, Mode=OneWay, Source={x:Static spp:Strings.GameList_IsEmpty}}">
        <spp:ContentLoader.GestureRecognizers>
            <ScrollGestureRecognizer CanHorizontallyScroll="True" CanVerticallyScroll="True" />
        </spp:ContentLoader.GestureRecognizers>
        <ItemsRepeater x:Name="GameListRepeater" ItemsSource="{Binding SteamApps}">
            <!--
                Classes.Compact="{Binding Path=Value, Mode=OneWay, Source={x:Static ms:GameLibrarySettings.GameLibraryLayoutType}, Converter={StaticResource EnumEqualValueConverter}, ConverterParameter={x:Static spp:GridLayoutType.CompactGrid}}"
                Classes.Grid="{Binding Path=Value, Mode=OneWay, Source={x:Static ms:GameLibrarySettings.GameLibraryLayoutType}, Converter={StaticResource EnumEqualValueConverter}, ConverterParameter={x:Static spp:GridLayoutType.Grid}}"
                Classes.List="{Binding Path=Value, Mode=OneWay, Source={x:Static ms:GameLibrarySettings.GameLibraryLayoutType}, Converter={StaticResource EnumEqualValueConverter}, ConverterParameter={x:Static spp:GridLayoutType.List}}"
            -->
            <!--<ItemsRepeater.Styles>
                    <Style Selector="ItemsRepeater.Grid">
                        <Setter Property="Layout">
                            <Setter.Value>
                                <UniformGridLayout
                                    ItemsJustification="Start"
                                    ItemsStretch="Uniform"
                                    MinColumnSpacing="10"
                                    MinItemHeight="310"
                                    MinItemWidth="150"
                                    MinRowSpacing="10" />
                            </Setter.Value>
                        </Setter>
                    </Style>
                    <Style Selector="ItemsRepeater.List">
                        <Setter Property="Layout">
                            <Setter.Value>
                                <StackLayout Orientation="Vertical" Spacing="10" />
                            </Setter.Value>
                        </Setter>
                    </Style>
                    <Style Selector="ItemsRepeater.Compact">
                        <Setter Property="Layout">
                            <Setter.Value>
                                <UniformGridLayout
                                    ItemsJustification="Start"
                                    ItemsStretch="Uniform"
                                    MinColumnSpacing="5"
                                    MinItemHeight="65"
                                    MinItemWidth="230"
                                    MinRowSpacing="5" />
                            </Setter.Value>
                        </Setter>
                    </Style>
                    <Style Selector="spp|AppItem.List">
                        <Setter Property="MaxHeight" Value="65" />
                    </Style>
                </ItemsRepeater.Styles>-->
            <ItemsRepeater.Layout>
                <UniformGridLayout
                    ItemsJustification="Start"
                    ItemsStretch="Uniform"
                    MinColumnSpacing="10"
                    MinItemHeight="310"
                    MinItemWidth="150"
                    MinRowSpacing="10" />
            </ItemsRepeater.Layout>
            <ItemsRepeater.ItemTemplate>
                <DataTemplate DataType="spp:SteamApp">
                    <!--  Classes.Vertical="{Binding Path=Value, Mode=OneWay, Source={x:Static ms:GameLibrarySettings.GameLibraryLayoutType}, Converter={StaticResource EnumEqualValueConverter}, ConverterParameter={x:Static spp:GridLayoutType.Grid}}"  -->
                    <spp:AppItem
                        Title="{Binding DisplayName}"
                        Classes="Vertical"
                        ContextFlyout="{StaticResource SharedMenuFlyout}"
                        MoreFlyout="{StaticResource SharedMenuFlyout}">
                        <spp:AppItem.Status>
                            <Border Classes="Status">
                                <TextBlock Text="{Binding AppId}" />
                            </Border>
                        </spp:AppItem.Status>
                        <spp:AppItem.Image>
                            <Panel Width="{Binding $parent[spp:AppItem].Bounds.Width}">
                                <spp:Image2
                                    Name="AppImage"
                                    DecodeWidth="169"
                                    FallbackSource="avares://BD.WTTS.Client.Plugins.GameList/UI/Assets/defaultappimage.png"
                                    RenderOptions.BitmapInterpolationMode="HighQuality"
                                    Source="{Binding LibraryGridStream^}"
                                    Stretch="UniformToFill" />
                                <TextBlock
                                    Margin="8,0"
                                    HorizontalAlignment="Center"
                                    VerticalAlignment="Center"
                                    Foreground="White"
                                    IsVisible="{Binding #AppImage.IsFailed}"
                                    Text="{Binding DisplayName}"
                                    TextAlignment="Center"
                                    TextWrapping="WrapWithOverflow"
                                    Theme="{StaticResource BodyStrongTextBlockStyle}" />

                                <Border
                                    Margin="10,0,10,-3"
                                    HorizontalAlignment="Center"
                                    VerticalAlignment="Bottom"
                                    Background="{DynamicResource SolidBackgroundFillColorBaseBrush}"
                                    CornerRadius="3"
                                    IsVisible="{Binding IsInstalled}">
                                    <DockPanel Margin="10,3" HorizontalAlignment="Center">
                                        <TextBlock
                                            Margin="0,0,5,0"
                                            VerticalAlignment="Center"
                                            FontSize="11"
                                            Foreground="{DynamicResource TextFillColorPrimaryBrush}"
                                            IsVisible="{Binding InstalledDrive, Converter={StaticResource IsNullConverter}, ConverterParameter=invert}"
                                            Text="{Binding InstalledDrive}" />
                                        <TextBlock
                                            VerticalAlignment="Center"
                                            FontSize="11"
                                            Foreground="{DynamicResource TextFillColorPrimaryBrush}"
                                            Text="{Binding SizeOnDisk, Converter={StaticResource StringFormatConverter}, ConverterParameter=size}"
                                            TextWrapping="Wrap" />
                                    </DockPanel>
                                </Border>
                            </Panel>
                        </spp:AppItem.Image>
                    </spp:AppItem>
                </DataTemplate>
            </ItemsRepeater.ItemTemplate>
        </ItemsRepeater>

    </spp:ContentLoader>
</spp:PageBase>
