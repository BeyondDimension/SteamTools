<UserControl
    x:Class="BD.WTTS.UI.Views.Pages.MainView"
    xmlns="https://github.com/avaloniaui"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:enum="using:BD.WTTS.Enums"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:s="https://steampp.net/services"
    xmlns:spp="https://steampp.net/ui"
    xmlns:ui="using:FluentAvalonia.UI.Controls"
    xmlns:uip="using:FluentAvalonia.UI.Controls.Primitives"
    xmlns:wnd="using:FluentAvalonia.UI.Windowing"
    xmlns:wtts="using:BD.WTTS"
    d:DesignHeight="450"
    d:DesignWidth="800"
    x:CompileBindings="True"
    x:DataType="spp:MainWindowViewModel"
    mc:Ignorable="d">
    <UserControl.Styles>
        <Style Selector="ui|NavigationView.AppNav">
            <Setter Property="IsPaneToggleButtonVisible" Value="False" />
            <Setter Property="OpenPaneLength" Value="72" />
            <Setter Property="IsPaneOpen" Value="True" />
        </Style>

        <Style Selector="ui|NavigationView.AppNav[IsBackButtonVisible=False] SplitView /template/ ContentPresenter#PART_PanePresenter">
            <Setter Property="Margin" Value="0 50 0 0" />
        </Style>
        <Style Selector="ui|NavigationView.AppNav[IsBackButtonVisible=True] SplitView /template/ ContentPresenter#PART_PanePresenter">
            <Setter Property="Margin" Value="0 10 0 0" />
        </Style>

        <Style Selector="ui|NavigationViewItem.AppNav">
            <Setter Property="Transitions">
                <Setter.Value>
                    <Transitions>
                        <TransformOperationsTransition Property="RenderTransform" Duration="0:0:0.05" />
                    </Transitions>
                </Setter.Value>
            </Setter>
        </Style>

        <Style Selector="ui|NavigationViewItem.AppNav uip|NavigationViewItemPresenter">
            <Setter Property="Width" Value="72" />
            <Setter Property="MinHeight" Value="75" />
            <Setter Property="Cursor" Value="Hand" />
            <Setter Property="CornerRadius" Value="{StaticResource ControlCornerRadius}" />
            <Setter Property="Foreground" Value="{DynamicResource TextFillColorSecondaryBrush}" />
            <Setter Property="Template">
                <ControlTemplate>
                    <Border
                        Name="LayoutRoot"
                        Margin="4,6"
                        Background="{TemplateBinding Background}"
                        CornerRadius="{TemplateBinding CornerRadius}"
                        TemplatedControl.IsTemplateFocusTarget="True">
                        <Panel>
                            <Panel HorizontalAlignment="Left" VerticalAlignment="Center">

                                <Border
                                    Name="SelectionIndicator"
                                    Width="3"
                                    Height="20"
                                    VerticalAlignment="Center"
                                    Background="{DynamicResource NavigationViewSelectionIndicatorForeground}"
                                    CornerRadius="{StaticResource ControlCornerRadius}"
                                    Opacity="0" />
                            </Panel>


                            <DockPanel>
                                <ContentPresenter
                                    Name="ContentPresenter"
                                    Grid.Row="1"
                                    Margin="0,-15,0,3"
                                    Padding="0,4"
                                    HorizontalAlignment="Center"
                                    VerticalAlignment="Bottom"
                                    Content="{TemplateBinding Content}"
                                    ContentTemplate="{TemplateBinding ContentTemplate}"
                                    DockPanel.Dock="Bottom"
                                    FontSize="10">
                                    <ContentPresenter.Styles>
                                        <Style Selector="TextBlock">
                                            <Setter Property="TextWrapping" Value="Wrap" />
                                        </Style>
                                    </ContentPresenter.Styles>
                                </ContentPresenter>

                                <Viewbox
                                    Name="IconBox"
                                    Height="28"
                                    HorizontalAlignment="Center"
                                    VerticalAlignment="Center">
                                    <ContentPresenter Name="Icon" Content="{Binding TemplateSettings.Icon, RelativeSource={RelativeSource TemplatedParent}}" />
                                </Viewbox>

                            </DockPanel>
                        </Panel>
                    </Border>
                </ControlTemplate>
            </Setter>
        </Style>

        <Style Selector="ui|NavigationViewItem.AppNav uip|NavigationViewItemPresenter:pointerover /template/ ContentPresenter#ContentPresenter">
            <Setter Property="Foreground" Value="{DynamicResource TextFillColorPrimaryBrush}" />
        </Style>
        <Style Selector="ui|NavigationViewItem.AppNav uip|NavigationViewItemPresenter:pointerover /template/ ContentPresenter#Icon">
            <Setter Property="Foreground" Value="{DynamicResource TextFillColorPrimaryBrush}" />
        </Style>

        <Style Selector="ui|NavigationViewItem.AppNav uip|NavigationViewItemPresenter:pressed /template/ ContentPresenter#ContentPresenter">
            <Setter Property="Foreground" Value="{DynamicResource TextFillColorSecondaryBrush}" />
        </Style>
        <Style Selector="ui|NavigationViewItem.AppNav uip|NavigationViewItemPresenter:pressed /template/ ContentPresenter#Icon">
            <Setter Property="Foreground" Value="{DynamicResource TextFillColorSecondaryBrush}" />
        </Style>

        <Style Selector="ui|NavigationViewItem.AppNav uip|NavigationViewItemPresenter:selected /template/ ContentPresenter#ContentPresenter">
            <Setter Property="IsVisible" Value="False" />
            <Setter Property="Foreground" Value="{DynamicResource AccentFillColorDefaultBrush}" />
        </Style>

        <Style Selector="ui|NavigationViewItem.AppNav uip|NavigationViewItemPresenter:selected /template/ ContentPresenter#Icon">
            <Setter Property="Foreground" Value="{DynamicResource AccentFillColorDefaultBrush}" />
        </Style>
    </UserControl.Styles>

    <Grid RowDefinitions="Auto, *">
        <spp:TitleBar Name="TitleBarHost">
            <spp:TitleBar.ActionContent>
                <StackPanel Orientation="Horizontal" Spacing="8">
                    <DropDownButton
                        Width="40"
                        Height="40"
                        HorizontalContentAlignment="Center"
                        VerticalContentAlignment="Center"
                        Command="{Binding Path=MarkNotificationsHasRead, Mode=OneWay, Source={x:Static s:NoticeService.Current}}"
                        Theme="{DynamicResource TransparentButton}">
                        <Panel>
                            <ui:InfoBadge
                                Margin="0,-3,-3,0"
                                HorizontalAlignment="Right"
                                VerticalAlignment="Top"
                                Classes="Attention Dot"
                                IsVisible="{Binding Path=!!UnreadNotificationsCount, Mode=OneWay, Source={x:Static s:NoticeService.Current}}" />
                            <Viewbox
                                Width="22"
                                Height="22"
                                VerticalAlignment="Center">
                                <ui:SymbolIcon Symbol="Alert" />
                            </Viewbox>
                        </Panel>

                        <DropDownButton.Flyout>
                            <!--<ui:FAMenuFlyout
                                FlyoutPresenterClasses="NoPadding"
                                ItemsSource="{Binding Path=Notices, Mode=OneWay, Source={x:Static s:NoticeService.Current}}"
                                Placement="BottomEdgeAlignedRight">
                                <ui:FAMenuFlyout.ItemTemplate>
                                    <DataTemplate DataType="spp:OfficialMessageItemDTO">
                                        <ui:MenuFlyoutItem
                                            Command="{Binding OpenBrowserCommand, Source={x:Static spp:App.Instance}}"
                                            CommandParameter="{Binding MessageLink}"
                                            Text="{Binding Title}" />
                                    </DataTemplate>
                                </ui:FAMenuFlyout.ItemTemplate>
                            </ui:FAMenuFlyout>-->
                            <Flyout FlyoutPresenterClasses="NoPadding" Placement="BottomEdgeAlignedRight">
                                <spp:NoticeFlyout Margin="5" />
                            </Flyout>
                        </DropDownButton.Flyout>
                    </DropDownButton>

                    <DropDownButton Padding="4" Theme="{DynamicResource TransparentButton}">
                        <Border
                            Width="32"
                            Height="32"
                            Background="{DynamicResource ControlOnImageFillColorDefaultBrush}"
                            ClipToBounds="True"
                            CornerRadius="30">
                            <spp:Image2
                                DecodeWidth="36"
                                FallbackSource="{StaticResource DefaultAvatar}"
                                RenderOptions.BitmapInterpolationMode="HighQuality"
                                Source="{Binding Path=AvatarPath, Mode=OneWay, Source={x:Static s:UserService.Current}}" />
                        </Border>
                        <DropDownButton.Flyout>
                            <MenuFlyout FlyoutPresenterClasses="NoPadding" Placement="BottomEdgeAlignedRight">
                                <MenuItem
                                    Command="{Binding Path=ShowWindow, Source={x:Static s:UserService.Current}}"
                                    CommandParameter="{x:Static spp:AppEndPoint.LoginOrRegister}"
                                    Cursor="Hand"
                                    IsHitTestVisible="{Binding Path=User, Mode=OneWay, Source={x:Static s:UserService.Current}, Converter={StaticResource IsNullConverter}}">
                                    <MenuItem.Header>
                                        <DockPanel>
                                            <DockPanel DockPanel.Dock="Top">
                                                <Border
                                                    Width="64"
                                                    Height="64"
                                                    Margin="0,0,8,0"
                                                    ClipToBounds="True"
                                                    CornerRadius="64"
                                                    DockPanel.Dock="Left">
                                                    <spp:Image2
                                                        DecodeWidth="64"
                                                        FallbackSource="{StaticResource DefaultAvatar}"
                                                        RenderOptions.BitmapInterpolationMode="HighQuality"
                                                        Source="{Binding Path=AvatarPath, Mode=OneWay, Source={x:Static s:UserService.Current}}" />
                                                </Border>
                                                <Panel>
                                                    <TextBlock
                                                        VerticalAlignment="Center"
                                                        IsVisible="{Binding Path=User, Mode=OneWay, Source={x:Static s:UserService.Current}, Converter={StaticResource IsNullConverter}}"
                                                        Text="{Binding Path=Res.User_UnLogin, Mode=OneWay, Source={x:Static s:ResourceService.Current}}" />

                                                    <StackPanel VerticalAlignment="Center" IsVisible="{Binding Path=User, Mode=OneWay, Source={x:Static s:UserService.Current}, Converter={StaticResource IsNullConverter}, ConverterParameter=invert}">
                                                        <TextBlock Text="{Binding Path=User.NickName, Mode=OneWay, Source={x:Static s:UserService.Current}}" />
                                                        <Border
                                                            Padding="5,1"
                                                            VerticalAlignment="Center"
                                                            CornerRadius="2"
                                                            IsVisible="{Binding Path=User.UserType, Mode=OneWay, Source={x:Static s:UserService.Current}, Converter={StaticResource EnumEqualValueConverter}, ConverterParameter={x:Static enum:UserType.Sponsor}}">
                                                            <Border.Background>
                                                                <LinearGradientBrush StartPoint="0%,0%" EndPoint="100%,100%">
                                                                    <GradientStop Offset="0.0" Color="#453a94" />
                                                                    <GradientStop Offset="1.0" Color="#f43b47" />
                                                                </LinearGradientBrush>
                                                            </Border.Background>
                                                            <TextBlock
                                                                VerticalAlignment="Center"
                                                                FontSize="10"
                                                                Foreground="White"
                                                                Text="{Binding Path=Res.User_Sponsor, Mode=OneWay, Source={x:Static s:ResourceService.Current}, StringFormat={}❤️{0}}" />
                                                        </Border>

                                                    </StackPanel>
                                                </Panel>
                                            </DockPanel>
                                            <!--<WrapPanel HorizontalAlignment="Center" IsVisible="{Binding Path=User, Mode=OneWay, Source={x:Static s:UserService.Current}, Converter={StaticResource IsNullConverter}, ConverterParameter=invert}">
                                                <Button Margin="5,0" FontSize="10">
                                                    <ToolTip.Tip>
                                                        <MultiBinding StringFormat="{}{0} : {1} / {2}">
                                                            <CompiledBinding Path="Res.User_Experience" Source="{x:Static s:ResourceService.Current}" />
                                                            <CompiledBinding Path="User.Experience" Source="{x:Static s:UserService.Current}" />
                                                            <CompiledBinding Path="User.NextExperience" Source="{x:Static s:UserService.Current}" />
                                                        </MultiBinding>
                                                    </ToolTip.Tip>
                                                    <Button.Content>
                                                        <MultiBinding StringFormat="{}{0} : Lv.{1}">
                                                            <CompiledBinding Path="Res.User_Level" Source="{x:Static s:ResourceService.Current}" />
                                                            <CompiledBinding Path="User.Level" Source="{x:Static s:UserService.Current}" />
                                                        </MultiBinding>
                                                    </Button.Content>
                                                </Button>
                                                <Button
                                                    Margin="5,0"
                                                    Command="{Binding Path=SignInAsync, Mode=OneWay, Source={x:Static s:UserService.Current}}"
                                                    Content="{Binding Path=Res.Sign, Mode=OneWay, Source={x:Static s:ResourceService.Current}}"
                                                    FontSize="10"
                                                    IsVisible="{Binding Path=!User.IsSignIn, Mode=OneWay, Source={x:Static s:UserService.Current}}" />
                                                <Button
                                                    Margin="5,0"
                                                    FontSize="10"
                                                    IsVisible="{Binding Path=User.IsSignIn, Mode=OneWay, Source={x:Static s:UserService.Current}}"
                                                    ToolTip.Tip="{Binding Path=Res.Signed, Mode=OneWay, Source={x:Static s:ResourceService.Current}}">
                                                    <Button.Content>
                                                        <MultiBinding StringFormat="{}{0} : {1}">
                                                            <CompiledBinding Path="Res.User_EngineOil" Source="{x:Static s:ResourceService.Current}" />
                                                            <CompiledBinding Path="User.Balance" Source="{x:Static s:UserService.Current}" />
                                                        </MultiBinding>
                                                    </Button.Content>
                                                </Button>
                                            </WrapPanel>-->
                                        </DockPanel>
                                    </MenuItem.Header>
                                </MenuItem>
                                <MenuItem Header="-" IsVisible="{Binding Path=User, Mode=OneWay, Source={x:Static s:UserService.Current}, Converter={StaticResource IsNullConverter}, ConverterParameter=invert}" />
                                <MenuItem
                                    Command="{Binding Path=OpenAuthOfficialCommand, Source={x:Static s:UserService.Current}}"
                                    CommandParameter="https://steampp.net/account/center/info"
                                    Header="{Binding Path=Res.PersonalCenter, Mode=OneWay, Source={x:Static s:ResourceService.Current}}"
                                    IsVisible="{Binding Path=User, Mode=OneWay, Source={x:Static s:UserService.Current}, Converter={StaticResource IsNullConverter}, ConverterParameter=invert}" />
                                <!--<MenuItem Header="{Binding Path=Res.MyOrder, Mode=OneWay, Source={x:Static s:ResourceService.Current}}" IsVisible="{Binding Path=User, Mode=OneWay, Source={x:Static s:UserService.Current}, Converter={StaticResource IsNullConverter}, ConverterParameter=invert}" />-->
                                <MenuItem
                                    Command="{Binding Path=OpenAuthOfficialCommand, Source={x:Static s:UserService.Current}}"
                                    CommandParameter="https://steampp.net/account/center/bind"
                                    Header="{Binding Path=Res.BindThirdPartyAccount, Mode=OneWay, Source={x:Static s:ResourceService.Current}}"
                                    IsVisible="{Binding Path=User, Mode=OneWay, Source={x:Static s:UserService.Current}, Converter={StaticResource IsNullConverter}, ConverterParameter=invert}" />
                                <MenuItem
                                    Command="{Binding Path=OpenAuthOfficialCommand, Source={x:Static s:UserService.Current}}"
                                    CommandParameter="https://steampp.net/account/center/safe"
                                    Header="{Binding Path=Res.PersonalSafe, Mode=OneWay, Source={x:Static s:ResourceService.Current}}"
                                    IsVisible="{Binding Path=User, Mode=OneWay, Source={x:Static s:UserService.Current}, Converter={StaticResource IsNullConverter}, ConverterParameter=invert}" />
                                <MenuItem Header="-" IsVisible="{Binding Path=User, Mode=OneWay, Source={x:Static s:UserService.Current}, Converter={StaticResource IsNullConverter}, ConverterParameter=invert}" />
                                <MenuItem
                                    Command="{Binding Path=SignOut, Mode=OneWay, Source={x:Static s:UserService.Current}}"
                                    Foreground="{DynamicResource SystemFillColorCriticalBrush}"
                                    Header="{Binding Path=Res.SignOut, Mode=OneWay, Source={x:Static s:ResourceService.Current}}"
                                    IsVisible="{Binding Path=User, Mode=OneWay, Source={x:Static s:UserService.Current}, Converter={StaticResource IsNullConverter}, ConverterParameter=invert}" />
                                <!--<MenuItem
                                    Command="{Binding Path=ShowWindow,
                                                                Source={x:Static s:UserService.Current}}"
                                    CommandParameter="{x:Static spp:AppEndPoint.LoginOrRegister}"
                                    Foreground="{DynamicResource SystemFillColorAttentionBrush}"
                                    Header="{Binding Path=Res.LoginAndRegister,
                                                               Mode=OneWay,
                                                               Source={x:Static s:ResourceService.Current}}"
                                    IsVisible="{Binding Path=User,
                                                                  Mode=OneWay,
                                                                  Source={x:Static s:UserService.Current},
                                                                  Converter={StaticResource IsNullConverter}}" />-->
                            </MenuFlyout>
                        </DropDownButton.Flyout>
                    </DropDownButton>
                </StackPanel>
            </spp:TitleBar.ActionContent>
        </spp:TitleBar>

        <ui:NavigationView
            Name="NavView"
            Grid.RowSpan="2"
            AlwaysShowHeader="False"
            Classes="AppNav"
            FooterMenuItemsSource="{Binding FooterTabItems}"
            IsBackButtonVisible="True"
            IsBackEnabled="{Binding #FrameView.CanGoBack}"
            IsPaneOpen="True"
            IsSettingsVisible="False"
            MenuItemsSource="{Binding TabItems}"
            PaneDisplayMode="Left">
            <ui:NavigationView.Resources>
                <!--  Override this  -->
                <Thickness x:Key="NavigationViewContentMargin">0,60,0,0</Thickness>
            </ui:NavigationView.Resources>
            <ui:NavigationView.Styles>
                <Style Selector="Button#NavigationViewBackButton">
                    <Setter Property="FontFamily" Value="{DynamicResource SymbolThemeFontFamily}" />
                    <Setter Property="Width" Value="36" />
                    <Setter Property="Height" Value="36" />
                    <Setter Property="FontSize" Value="14" />
                    <Setter Property="Content" Value="&#xF0D5;" />
                </Style>
                <Style Selector="Grid#PaneToggleButtonGrid">
                    <Setter Property="Margin" Value="5 5 0 0" />
                    <Setter Property="ToolTip.Tip" Value="{Binding Path=Res.Back, Mode=OneWay, Source={x:Static s:ResourceService.Current}}" />
                    <Setter Property="ToolTip.Placement" Value="Bottom" />
                </Style>
            </ui:NavigationView.Styles>
            <ui:NavigationView.MenuItemTemplate>
                <DataTemplate DataType="spp:TabItemViewModel">
                    <ui:NavigationViewItem Classes="AppNav" Content="{Binding Name}">
                        <ui:NavigationViewItem.IconSource>
                            <!--<ui:FontIconSource FontFamily="{StaticResource SymbolThemeFontFamily}" Glyph="{Binding IconKey, Converter={StaticResource ResourceKeyValueConverter}, ConverterParameter=fonticon}" />-->
                            <ui:ImageIconSource Source="{Binding IconKey, Converter={StaticResource BitmapAssetValueConverter}}" />
                        </ui:NavigationViewItem.IconSource>
                    </ui:NavigationViewItem>
                </DataTemplate>
            </ui:NavigationView.MenuItemTemplate>
            <ui:Frame Name="FrameView" />
        </ui:NavigationView>
    </Grid>
</UserControl>
