<UserControl
    x:Class="BD.WTTS.UI.Views.Pages.Settings_UI"
    xmlns="https://github.com/avaloniaui"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:com="https://steampp.net/common"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:enum="using:BD.WTTS.Enums"
    xmlns:generic="using:System.Collections.Generic"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:ms="https://steampp.net/settings"
    xmlns:s="https://steampp.net/services"
    xmlns:spp="https://steampp.net/ui"
    xmlns:ui="using:FluentAvalonia.UI.Controls"
    d:DesignHeight="680"
    d:DesignWidth="1080"
    x:CompileBindings="True"
    x:DataType="spp:SettingsPageViewModel"
    mc:Ignorable="d">
    <StackPanel Spacing="{StaticResource SettingsSpacing}">
        <TextBlock
            Margin="0,0,0,10"
            Text="{Binding Path=Res.Settings_UI, Mode=OneWay, Source={x:Static spp:Strings.Settings_UI}}"
            Theme="{StaticResource SubtitleTextBlockStyle}" />

        <Border IsEnabled="{Binding Path=User, Mode=OneWay, Source={x:Static s:UserService.Current}, Converter={StaticResource IsNullConverter}, ConverterParameter=invert}">
            <ui:SettingsExpander
                Description="{Binding Path=Res.Advertisement_NoShow_Tip, Mode=OneWay, Source={x:Static spp:Strings.Advertisement_NoShow_Tip}}"
                Header="{Binding Path=Res.Advertisement_NoShow, Mode=OneWay, Source={x:Static spp:Strings.Advertisement_NoShow}}"
                IsEnabled="{Binding Path=User.UserType, Mode=OneWay, Source={x:Static s:UserService.Current}, Converter={StaticResource EnumEqualValueConverter}, ConverterParameter={x:Static enum:UserType.Sponsor}}">
                <ui:SettingsExpander.IconSource>
                    <ui:FontIconSource FontFamily="{StaticResource SymbolThemeFontFamily}" Glyph="{StaticResource HeartBroken}" />
                </ui:SettingsExpander.IconSource>
                <ui:SettingsExpander.Footer>
                    <ToggleSwitch Classes="LeftContent" IsChecked="{Binding Source={x:Static ms:UISettings.IsShowAdvertisement}, Path=!Value, Mode=TwoWay}" />
                </ui:SettingsExpander.Footer>
            </ui:SettingsExpander>
        </Border>

        <spp:OptionsDisplayItem
            Description="{Binding Path=Res.Settings_UI_ThemeStyle, Mode=OneWay, Source={x:Static spp:Strings.Settings_UI_ThemeStyle}}"
            Header="{Binding Path=Res.Settings_Theme, Mode=OneWay, Source={x:Static spp:Strings.Settings_Theme}}"
            Icon="DarkTheme">
            <spp:OptionsDisplayItem.ActionButton>
                <ComboBox SelectedItem="{Binding Source={x:Static ms:UISettings.Theme}, Path=Value, Mode=TwoWay, Converter={StaticResource EnumConverter}, ConverterParameter={x:Type spp:AppTheme}}">
                    <ComboBox.Items>
                        <spp:AppTheme>FollowingSystem</spp:AppTheme>
                        <spp:AppTheme>Light</spp:AppTheme>
                        <spp:AppTheme>Dark</spp:AppTheme>
                    </ComboBox.Items>
                    <ComboBox.ItemTemplate>
                        <DataTemplate DataType="spp:AppTheme">
                            <TextBlock Text="{Binding ., Converter={StaticResource EnumLocalizationNameConverter}}" />
                        </DataTemplate>
                    </ComboBox.ItemTemplate>
                </ComboBox>
            </spp:OptionsDisplayItem.ActionButton>
        </spp:OptionsDisplayItem>
        <spp:OptionsDisplayItem
            Description="{Binding Path=Res.Settings_UI_AccentColor, Mode=OneWay, Source={x:Static spp:Strings.Settings_UI_AccentColor}}"
            Expands="True"
            Header="{Binding Path=Res.Settings_ThemeAccent, Mode=OneWay, Source={x:Static spp:Strings.Settings_ThemeAccent}}"
            Icon="ColorLine"
            IsExpanded="{Binding Path=IsChecked, ElementName=AccentCustom, Mode=OneWay}">
            <spp:OptionsDisplayItem.ActionButton>
                <StackPanel Orientation="Horizontal" Spacing="10">
                    <RadioButton Content="{Binding Path=Res.Settings_UI_SystemDefault, Mode=OneWay, Source={x:Static spp:Strings.Settings_UI_SystemDefault}}" IsChecked="{Binding Source={x:Static ms:UISettings.UseSystemThemeAccent}, Path=Value, Mode=TwoWay}" />
                    <RadioButton
                        x:Name="AccentCustom"
                        Content="{Binding Path=Res.Settings_UI_Custom, Mode=OneWay, Source={x:Static spp:Strings.Settings_UI_Custom}}"
                        IsChecked="{Binding Source={x:Static ms:UISettings.UseSystemThemeAccent}, Path=!Value, Mode=OneWay}" />
                </StackPanel>
            </spp:OptionsDisplayItem.ActionButton>
            <spp:OptionsDisplayItem.Content>
                <StackPanel Spacing="4">
                    <DockPanel Margin="24,0,0,6" LastChildFill="False">
                        <TextBlock
                            VerticalAlignment="Center"
                            DockPanel.Dock="Left"
                            Text="{Binding Path=Res.Settings_UI_PreviewColor, Mode=OneWay, Source={x:Static spp:Strings.Settings_UI_PreviewColor}}" />

                        <Grid
                            HorizontalAlignment="Left"
                            ColumnDefinitions="*,*"
                            DockPanel.Dock="Right"
                            RowDefinitions="*,*,*,*">
                            <Border
                                Grid.ColumnSpan="2"
                                Height="40"
                                Background="{DynamicResource SystemAccentColor}">
                                <TextBlock
                                    HorizontalAlignment="Center"
                                    VerticalAlignment="Center"
                                    Foreground="{DynamicResource TextOnAccentFillColorPrimaryBrush}"
                                    Text="SystemAccentColor" />
                            </Border>

                            <Border
                                Grid.Row="1"
                                Grid.Column="0"
                                Width="90"
                                Height="40"
                                Background="{DynamicResource SystemAccentColorLight1}">
                                <TextBlock
                                    HorizontalAlignment="Center"
                                    VerticalAlignment="Center"
                                    Foreground="{DynamicResource TextOnAccentFillColorPrimaryBrush}"
                                    Text="Light1" />
                            </Border>
                            <Border
                                Grid.Row="2"
                                Grid.Column="0"
                                Width="90"
                                Height="40"
                                Background="{DynamicResource SystemAccentColorLight2}">
                                <TextBlock
                                    HorizontalAlignment="Center"
                                    VerticalAlignment="Center"
                                    Foreground="{DynamicResource TextOnAccentFillColorPrimaryBrush}"
                                    Text="Light2" />
                            </Border>
                            <Border
                                Grid.Row="3"
                                Grid.Column="0"
                                Width="90"
                                Height="40"
                                Background="{DynamicResource SystemAccentColorLight3}">
                                <TextBlock
                                    HorizontalAlignment="Center"
                                    VerticalAlignment="Center"
                                    Foreground="{DynamicResource TextOnAccentFillColorPrimaryBrush}"
                                    Text="Light3" />
                            </Border>

                            <Border
                                Grid.Row="1"
                                Grid.Column="1"
                                Width="90"
                                Height="40"
                                Background="{DynamicResource SystemAccentColorDark1}">
                                <TextBlock
                                    HorizontalAlignment="Center"
                                    VerticalAlignment="Center"
                                    Foreground="{DynamicResource TextOnAccentFillColorPrimaryBrush}"
                                    Text="Dark1" />
                            </Border>
                            <Border
                                Grid.Row="2"
                                Grid.Column="1"
                                Width="90"
                                Height="40"
                                Background="{DynamicResource SystemAccentColorDark2}">
                                <TextBlock
                                    HorizontalAlignment="Center"
                                    VerticalAlignment="Center"
                                    Foreground="{DynamicResource TextOnAccentFillColorPrimaryBrush}"
                                    Text="Dark2" />
                            </Border>
                            <Border
                                Grid.Row="3"
                                Grid.Column="1"
                                Width="90"
                                Height="40"
                                Background="{DynamicResource SystemAccentColorDark3}">
                                <TextBlock
                                    HorizontalAlignment="Center"
                                    VerticalAlignment="Center"
                                    Foreground="{DynamicResource TextOnAccentFillColorPrimaryBrush}"
                                    Text="Dark3" />
                            </Border>
                        </Grid>
                    </DockPanel>

                    <Border
                        Height="1"
                        Margin="-20"
                        Background="{DynamicResource ApplicationPageBackgroundThemeBrush}" />


                    <TextBlock Margin="24,24,0,0" Text="Windows 颜色" />

                    <ListBox
                        Name="ColorListBox"
                        MaxWidth="441"
                        Margin="24,0,24,12"
                        HorizontalAlignment="Left"
                        AutoScrollToSelectedItem="False"
                        SelectedItem="{Binding Source={x:Static ms:UISettings.ThemeAccent}, Converter={StaticResource ColorStringToBrushConverter}, Path=Value, Mode=TwoWay}">
                        <ListBox.ItemsPanel>
                            <ItemsPanelTemplate>
                                <WrapPanel />
                            </ItemsPanelTemplate>
                        </ListBox.ItemsPanel>

                        <ListBox.Styles>
                            <Style Selector="ListBoxItem">
                                <Setter Property="Width" Value="48" />
                                <Setter Property="Height" Value="48" />
                                <Setter Property="MinWidth" Value="0" />
                                <Setter Property="Margin" Value="1 1 0 0" />
                                <Setter Property="Template">
                                    <ControlTemplate>
                                        <Panel>
                                            <Border
                                                Name="Root"
                                                BorderThickness="2"
                                                CornerRadius="{StaticResource ControlCornerRadius}">
                                                <Border.Background>
                                                    <SolidColorBrush Color="{Binding}" />
                                                </Border.Background>
                                            </Border>

                                            <Border
                                                Name="Check"
                                                Width="20"
                                                Height="20"
                                                Margin="0,2,2,0"
                                                HorizontalAlignment="Right"
                                                VerticalAlignment="Top"
                                                Background="{DynamicResource FocusStrokeColorOuter}">
                                                <ui:SymbolIcon
                                                    FontSize="18"
                                                    Foreground="{DynamicResource SystemAccentColor}"
                                                    Symbol="Checkmark" />
                                            </Border>
                                        </Panel>
                                    </ControlTemplate>
                                </Setter>
                            </Style>
                            <Style Selector="ListBoxItem /template/ Border#Check">
                                <Setter Property="IsVisible" Value="False" />
                            </Style>
                            <Style Selector="ListBoxItem:pointerover /template/ Border#Root">
                                <Setter Property="BorderBrush" Value="{DynamicResource FocusStrokeColorOuter}" />
                            </Style>

                            <Style Selector="ListBoxItem:selected /template/ Border#Root">
                                <Setter Property="BorderBrush" Value="{DynamicResource FocusStrokeColorOuter}" />
                            </Style>
                            <Style Selector="ListBoxItem:selected /template/ Border#Check">
                                <Setter Property="IsVisible" Value="True" />
                            </Style>
                        </ListBox.Styles>

                    </ListBox>

                    <Border
                        Height="1"
                        Margin="-20"
                        Background="{DynamicResource ApplicationPageBackgroundThemeBrush}" />

                    <DockPanel Margin="24,6,0,0" LastChildFill="False">
                        <TextBlock
                            VerticalAlignment="Center"
                            DockPanel.Dock="Left"
                            Text="{Binding Path=Res.Settings_UI_CustomColor, Mode=OneWay, Source={x:Static spp:Strings.Settings_UI_CustomColor}}" />

                        <ui:ColorPickerButton
                            DockPanel.Dock="Right"
                            IsCompact="True"
                            IsMoreButtonVisible="True"
                            ShowAcceptDismissButtons="True"
                            UseColorPalette="False"
                            UseColorTriangle="False"
                            UseColorWheel="False"
                            UseSpectrum="True"
                            Color="{Binding Source={x:Static ms:UISettings.ThemeAccent}, Converter={StaticResource ColorStringToBrushConverter}, Path=Value, Mode=TwoWay}" />
                    </DockPanel>
                </StackPanel>
            </spp:OptionsDisplayItem.Content>
        </spp:OptionsDisplayItem>

        <spp:OptionsDisplayItem
            Description="{Binding Path=Res.Settings_UI_DefaultLanguage, Mode=OneWay, Source={x:Static spp:Strings.Settings_UI_DefaultLanguage}}"
            Header="{Binding Path=Res.Settings_Language, Mode=OneWay, Source={x:Static spp:Strings.Settings_Language}}"
            Navigates="False">
            <spp:OptionsDisplayItem.Icon>
                <ui:FontIcon FontFamily="Segoe Fluent Icons" Glyph="&#xF2B7;" />
            </spp:OptionsDisplayItem.Icon>
            <spp:OptionsDisplayItem.ActionButton>
                <ComboBox ItemsSource="{x:Static s:ResourceService.Languages}" SelectedItem="{Binding SelectLanguage, Mode=TwoWay}">
                    <ComboBox.ItemTemplate>
                        <DataTemplate>
                            <DataTemplate.DataType>
                                <x:Type x:TypeArguments="x:String, x:String" TypeName="generic:KeyValuePair" />
                            </DataTemplate.DataType>
                            <TextBlock Text="{Binding Value, Mode=OneWay}" />
                        </DataTemplate>
                    </ComboBox.ItemTemplate>
                </ComboBox>
            </spp:OptionsDisplayItem.ActionButton>
        </spp:OptionsDisplayItem>

        <spp:OptionsDisplayItem
            Description="{Binding Path=Res.Settings_UI_DefaultFonts, Mode=OneWay, Source={x:Static spp:Strings.Settings_UI_DefaultFonts}}"
            Header="{Binding Path=Res.Settings_Fonts, Mode=OneWay, Source={x:Static spp:Strings.Settings_Fonts}}"
            Icon="Font"
            Navigates="False">
            <spp:OptionsDisplayItem.ActionButton>
                <ComboBox
                    AutoScrollToSelectedItem="True"
                    ItemsSource="{Binding Mode=OneWay, Source={x:Static s:ResourceService.Fonts}}"
                    MaxDropDownHeight="300"
                    SelectedItem="{Binding SelectFont}">
                    <ComboBox.ItemTemplate>
                        <DataTemplate>
                            <DataTemplate.DataType>
                                <x:Type x:TypeArguments="x:String, x:String" TypeName="generic:KeyValuePair" />
                            </DataTemplate.DataType>
                            <TextBlock FontFamily="{Binding Value, Mode=OneWay, Converter={StaticResource NameToFontFamilyConverter}}" Text="{Binding Key, Mode=OneWay}" />
                        </DataTemplate>
                    </ComboBox.ItemTemplate>
                </ComboBox>
            </spp:OptionsDisplayItem.ActionButton>
        </spp:OptionsDisplayItem>

        <spp:OptionsDisplayItem
            Description="{Binding Path=Res.Settings_UI_WindowBackgroundStyle, Mode=OneWay, Source={x:Static spp:Strings.Settings_UI_WindowBackgroundStyle}}"
            Header="{Binding Path=Res.Settings_UI_WindowTransparencyMaterial, Mode=OneWay, Source={x:Static spp:Strings.Settings_UI_WindowTransparencyMaterial}}"
            Navigates="False">
            <spp:OptionsDisplayItem.Icon>
                <ui:FontIcon FontFamily="Segoe Fluent Icons" Glyph="&#xF4A5;" />
            </spp:OptionsDisplayItem.Icon>
            <spp:OptionsDisplayItem.ActionButton>
                <ComboBox SelectedItem="{Binding Source={x:Static ms:UISettings.WindowBackgroundMaterial}, Path=Value, Mode=TwoWay}">
                    <ComboBox.Items>
                        <spp:WindowBackgroundMaterial>None</spp:WindowBackgroundMaterial>
                        <spp:WindowBackgroundMaterial>Blur</spp:WindowBackgroundMaterial>
                        <spp:WindowBackgroundMaterial>AcrylicBlur</spp:WindowBackgroundMaterial>
                        <spp:WindowBackgroundMaterial>Mica</spp:WindowBackgroundMaterial>
                    </ComboBox.Items>
                    <!--<ComboBoxItem Content="{x:Static spp:WindowBackgroundMaterial.None}" />
					<ComboBoxItem Content="{x:Static spp:WindowBackgroundMaterial.Blur}" />
					<ComboBoxItem Content="{x:Static spp:WindowBackgroundMaterial.AcrylicBlur}" />
					<ComboBoxItem Content="{x:Static spp:WindowBackgroundMaterial.Mica}" IsVisible="{spp:OnPlatform Windows11AtLeast}" />-->
                </ComboBox>
            </spp:OptionsDisplayItem.ActionButton>
        </spp:OptionsDisplayItem>

        <spp:OptionsDisplayItem Header="{Binding Path=Res.Settings_UI_BackgroundOpacity, Mode=OneWay, Source={x:Static spp:Strings.Settings_UI_BackgroundOpacity}}" Navigates="False">
            <spp:OptionsDisplayItem.Icon>
                <ui:FontIcon FontFamily="{StaticResource SymbolThemeFontFamily}" Glyph="&#xE706;" />
            </spp:OptionsDisplayItem.Icon>
            <spp:OptionsDisplayItem.ActionButton>
                <Slider
                    MinWidth="250"
                    Maximum="1.0"
                    Minimum="0"
                    Value="{Binding Value, Source={x:Static ms:UISettings.WindowBackgroundOpacity}, Mode=TwoWay}" />
            </spp:OptionsDisplayItem.ActionButton>
        </spp:OptionsDisplayItem>

        <spp:OptionsDisplayItem
            Expands="True"
            Header="{Binding Path=Res.Settings_UI_CustomBackgroundImage, Mode=OneWay, Source={x:Static spp:Strings.Settings_UI_CustomBackgroundImage}}"
            IsExpanded="{Binding Source={x:Static ms:UISettings.WindowBackgroundCustomImage}, Path=Value, Mode=OneWay}"
            Navigates="False">
            <spp:OptionsDisplayItem.Icon>
                <ui:FontIcon FontFamily="Segoe Fluent Icons" Glyph="&#xE91B;" />
            </spp:OptionsDisplayItem.Icon>
            <spp:OptionsDisplayItem.ActionButton>
                <ToggleSwitch Classes="LeftContent" IsChecked="{Binding Source={x:Static ms:UISettings.WindowBackgroundCustomImage}, Path=Value, Mode=TwoWay}" />
            </spp:OptionsDisplayItem.ActionButton>

            <spp:OptionsDisplayItem.Content>
                <StackPanel Spacing="4">
                    <DockPanel Margin="24,0,0,6" LastChildFill="False">
                        <TextBlock
                            VerticalAlignment="Center"
                            DockPanel.Dock="Left"
                            Text="{Binding Path=Res.PreviewPictures, Mode=OneWay, Source={x:Static spp:Strings.PreviewPictures}}" />

                        <Image
                            Width="250"
                            Height="150"
                            HorizontalAlignment="Left"
                            DockPanel.Dock="Right"
                            RenderOptions.BitmapInterpolationMode="HighQuality"
                            Source="{Binding Source={x:Static ms:UISettings.WindowBackgroundCustomImagePath}, Path=Value, Mode=OneWay, Converter={StaticResource BitmapAssetValueConverter}}"
                            Stretch="{Binding Source={x:Static ms:UISettings.WindowBackgroundCustomImageStretch}, Path=Value, Mode=OneWay, Converter={StaticResource EnumConverter}, ConverterParameter={x:Type Stretch}}" />
                    </DockPanel>

                    <Border
                        Height="1"
                        Margin="-20"
                        Background="{DynamicResource ApplicationPageBackgroundThemeBrush}" />


                    <DockPanel Margin="24,6,0,6" LastChildFill="False">
                        <TextBlock
                            VerticalAlignment="Center"
                            DockPanel.Dock="Left"
                            Text="{Binding Path=Res.Settings_UI_BackgroundImageOpacity, Mode=OneWay, Source={x:Static spp:Strings.Settings_UI_BackgroundImageOpacity}}" />
                        <Slider
                            MinWidth="250"
                            DockPanel.Dock="Right"
                            Maximum="1.0"
                            Minimum="0"
                            Value="{Binding Value, Source={x:Static ms:UISettings.WindowBackgroundCustomImageOpacity}, Mode=TwoWay}" />
                    </DockPanel>

                    <Border
                        Height="1"
                        Margin="-20"
                        Background="{DynamicResource ApplicationPageBackgroundThemeBrush}" />


                    <DockPanel Margin="24,6,0,6" LastChildFill="False">
                        <TextBlock
                            VerticalAlignment="Center"
                            DockPanel.Dock="Left"
                            Text="{Binding Path=Res.SelectPicture, Mode=OneWay, Source={x:Static spp:Strings.SelectPicture}}" />
                        <Button
                            MinWidth="150"
                            Command="{Binding SelectImage_Click}"
                            Content="{Binding Path=Res.Settings_UI_SelectImage, Mode=OneWay, Source={x:Static spp:Strings.Settings_UI_SelectImage}}"
                            DockPanel.Dock="Right" />
                    </DockPanel>

                    <Border
                        Height="1"
                        Margin="-20"
                        Background="{DynamicResource ApplicationPageBackgroundThemeBrush}" />

                    <DockPanel Margin="24,6,0,0" LastChildFill="False">
                        <TextBlock
                            VerticalAlignment="Center"
                            DockPanel.Dock="Left"
                            Text="{Binding Path=Res.PictureZoom, Mode=OneWay, Source={x:Static spp:Strings.PictureZoom}}" />
                        <ComboBox
                            MinWidth="150"
                            DockPanel.Dock="Right"
                            SelectedItem="{Binding Source={x:Static ms:UISettings.WindowBackgroundCustomImageStretch}, Path=Value, Mode=TwoWay}">
                            <ComboBox.Items>
                                <spp:XamlMediaStretch>Fill</spp:XamlMediaStretch>
                                <spp:XamlMediaStretch>None</spp:XamlMediaStretch>
                                <spp:XamlMediaStretch>Uniform</spp:XamlMediaStretch>
                                <spp:XamlMediaStretch>UniformToFill</spp:XamlMediaStretch>
                            </ComboBox.Items>
                        </ComboBox>
                    </DockPanel>
                </StackPanel>
            </spp:OptionsDisplayItem.Content>
        </spp:OptionsDisplayItem>

        <ui:SettingsExpander Description="拖拽调整所有插件的菜单顺序" Header="功能菜单排序">
            <ui:SettingsExpander.IconSource>
                <ui:FontIconSource FontFamily="{StaticResource SymbolThemeFontFamily}" Glyph="{StaticResource Sort}" />
            </ui:SettingsExpander.IconSource>
            <ui:SettingsExpanderItem IsClickEnabled="False" Theme="{StaticResource SettingsExpanderItem2}">
                <ui:SettingsExpanderItem.Content>
                    <ItemsControl Classes="DraggableOrder" ItemsSource="{Binding MainWindow2.TabItems, Mode=OneWay, Source={x:Static s:IViewModelManager.Instance}}">
                        <ItemsControl.ItemTemplate>
                            <DataTemplate DataType="spp:TabItemViewModel">
                                <ListBoxItem>
                                    <Grid ColumnDefinitions="Auto,*,Auto">
                                        <ui:ImageIcon
                                            Width="24"
                                            Height="24"
                                            Margin="8"
                                            VerticalAlignment="Center"
                                            Source="{Binding IconKey, Converter={StaticResource BitmapAssetValueConverter}}" />
                                        <TextBlock
                                            Grid.Column="1"
                                            VerticalAlignment="Center"
                                            Text="{Binding Name}" />
                                        <Viewbox
                                            Grid.Column="2"
                                            Width="18"
                                            Height="18"
                                            Margin="8,0"
                                            VerticalAlignment="Center">
                                            <ui:FontIcon FontFamily="{StaticResource SymbolThemeFontFamily}" Glyph="{StaticResource Move}" />
                                        </Viewbox>
                                    </Grid>
                                </ListBoxItem>
                            </DataTemplate>
                        </ItemsControl.ItemTemplate>
                    </ItemsControl>
                </ui:SettingsExpanderItem.Content>
            </ui:SettingsExpanderItem>
        </ui:SettingsExpander>
    </StackPanel>
</UserControl>
